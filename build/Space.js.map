{"version":3,"file":null,"sources":["../src/Point/Spherical.js","../src/Point/Polar.js","../src/Point/Cartesian.js","../src/Point.js","../src/World.js","../src/Path.js","../src/Group.js","../src/Polygon.js","../src/Bezier.js","../src/Space.js"],"sourcesContent":["import Cartesian from './Cartesian';\n\n////\n// Spherical\n////\n\nconst Spherical = function (r, phi, theta) {\n    this.r = r || 0;            // distance\n    this.phi = phi || 0;        // polar angle\n    this.theta = theta || 0;    // azimuthal angle\n};\n\n//// Spherical conversions\n\n// Cartesian\n\nSpherical.prototype.x = function () {\n    return this.r * Math.sin(this.theta) * Math.cos(this.phi);\n};\n\nSpherical.prototype.y = function () {\n    return this.r * Math.sin(this.theta) * Math.sin(this.phi);\n};\n\nSpherical.prototype.z = function () {\n    return this.r * Math.cos(this.theta);\n};\n\nSpherical.prototype.toCartesian = function () {\n    return new Cartesian(this.x(), this.y(), this.z());\n};\n\n// Geographical\n// https://vvvv.org/blog/polar-spherical-and-geographic-coordinates\n\nSpherical.prototype.lat = function () {\n    return this.phi - (Math.PI / 2);\n};\n\nSpherical.prototype.lng = function () {\n    return this.theta;\n};\n\nexport default Spherical;\n","import Cartesian from './Cartesian';\n\n////\n// Polar\n////\n\nconst Polar = function (r, phi) {\n    this.r = r || 0;            // distance\n    this.phi = phi || 0;        // polar angle\n};\n\n//// Polar conversions\n\n// Cartesian\n\nPolar.prototype.x = function () {\n    return this.r * Math.cos(this.phi);\n};\n\nPolar.prototype.y = function () {\n    return this.r * Math.sin(this.phi);\n};\n\nPolar.prototype.toCartesian = function () {\n    return new Cartesian(this.x(), this.y());\n};\n\nexport default Polar;\n","import Spherical from './Spherical';\nimport Polar from './Polar';\n\n////\n// Cartesian\n////\n\nconst Cartesian = function (x, y, z) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n};\n\n// Convert to Spherical\n\nCartesian.prototype.r = function () {\n    // eslint-disable-next-line no-restricted-properties\n    return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2) + Math.pow(this.z, 2));\n};\n\nCartesian.prototype.phi = function () {\n    return Math.atan2(this.y, this.x);\n};\n\nCartesian.prototype.theta = function () {\n    return Math.acos(this.z / this.r());\n};\n\n//@TODO test\nCartesian.prototype.toPolar = function () {\n    return new Polar(this.r(), this.phi());\n};\n\nCartesian.prototype.toSpherical = function () {\n    return new Spherical(this.r(), this.phi(), this.theta());\n};\n\n// Geographical\n// https://vvvv.org/blog/polar-spherical-and-geographic-coordinates\n\nCartesian.prototype.lat = function () {\n    return this.phi() - (Math.PI / 2);\n};\n\nCartesian.prototype.lng = function () {\n    return this.theta();\n};\n\n// Operations\n\nCartesian.prototype.add = function (p) {\n    this.x += p.x;\n    this.y += p.y;\n    this.z += p.z;\n};\n\nCartesian.prototype.substract = function (p) {\n    this.x -= p.x;\n    this.y -= p.y;\n    this.z -= p.z;\n};\n\nCartesian.prototype.multiply = function (p) {\n    this.x *= p.x;\n    this.y *= p.y;\n    this.z *= p.z;\n};\n\n// world operations\n\nCartesian.prototype.scale = function (origin, p) {\n    this.substract(origin);\n    this.multiply(p);\n    this.add(origin);\n};\n\nCartesian.prototype.rotate2D = function (origin, phi) {\n    this.substract(origin);\n    let p = this.toPolar();\n    p.phi += phi;\n    p = p.toCartesian();\n    this.x = p.x;\n    this.y = p.y;\n    this.add(origin);\n};\n\n// operations with primitives\n\nCartesian.prototype.translate = function (x, y, z) {\n    x = x || 0;\n    y = y || 0;\n    z = z || 0;\n    this.x += x;\n    this.y += y;\n    this.z += z;\n};\n\n// comparasion\n\nCartesian.prototype.equals = function (p) {\n    return ((this.x === p.x) && (this.y === p.y) && (this.z === p.z));\n};\n\n// exports\n\nCartesian.prototype.clone = function () {\n    return new Cartesian(this.x, this.y, this.z);\n};\n\nCartesian.prototype.toArray = function () {\n    return [this.x, this.y, this.z];\n};\n\n// static methods\n\nCartesian.create = function (x, y, z) {\n    if (typeof x === 'object' && typeof x.clone === 'function') {\n        return x;\n    }\n    return new Cartesian(x, y, z);\n};\n\nexport default Cartesian;\n","import Cartesian from './Point/Cartesian';\nimport Spherical from './Point/Spherical';\nimport Polar from './Point/Polar';\n\nconst Point = {\n    Cartesian,\n    Spherical,\n    Polar\n};\n\nexport default Point;\n","const World = function (origin) {\n    origin = origin || null;\n\n    if (!origin || typeof origin.clone !== 'function') {\n        throw Error('World constructor requires a Space.Point.Cartesian instance');\n    }\n\n    this.origin = function () {\n        return origin.clone();\n    };\n\n    this.locate = function (point) {\n        point.add(origin);\n        return point;\n    };\n};\n\nexport default World;\n","import Point from './Point';\nimport World from './World';\n\nconst Path = function (x, y, z) {\n    const origin = Point.Cartesian.create(x, y, z);\n    World.call(this, origin);\n\n    this.points = [];\n};\n\nPath.prototype = Object.create(World.prototype);\nPath.prototype.constructor = Path;\n\n// push to points, consider closed\nPath.prototype.addPoint = function (v) {\n    if (this.isClosed()) {\n        this.points.splice(this.points.length - 1, 0, v);\n    } else {\n        this.points.push(v);\n    }\n};\n\n// add coords relative to origin\nPath.prototype.add = function (x, y, z) {\n    const v = this.locate(Point.Cartesian.create(x, y, z));\n    this.addPoint(v);\n};\n\n// relatve coords from last point\nPath.prototype.progress = function (x, y, z) {\n    if (!this.points.length) {\n        throw new Error('Path error: cannot progress on an empty path');\n    }\n    const v = Point.Cartesian.create(x, y, z);\n    v.add(this.last());\n    this.addPoint(v);\n};\n\n// replace (or set) a point at a specified index, updates closed index\nPath.prototype.set = function (index, x, y, z) {\n    const closed = this.isClosed();\n    if (closed) {\n        this.open();\n    }\n    this.points[index] = this.locate(Point.Cartesian.create(x, y, z));\n    if (closed) {\n        this.close();\n    }\n};\n\n// get a point for index\nPath.prototype.get = function (index) {\n    return (this.points[index] !== undefined) ? this.points[index] : null;\n};\n\n// get last point\nPath.prototype.last = function () {\n    return (this.points.length) ? this.points[this.points.length - 1] : null;\n};\n\n// get first point\nPath.prototype.first = function () {\n    return (this.points.length) ? this.points[0] : null;\n};\n\n// get  adjascent point for index\nPath.prototype.prev = function (index) {\n    if (!this.isClosed()) {\n        return this.get(index - 1);\n    }\n    // if closed the last item in array === first\n    return (index === 0) ? this.get(this.points.length - 2) : this.get(index - 1);\n};\n\n// get descendant point for index\nPath.prototype.next = function (index) {\n    if (!this.isClosed()) {\n        return this.get(index + 1);\n    }\n    return (index === this.points.length - 1) ? this.first() : this.get(index + 1);\n};\n\n// open path\nPath.prototype.open = function () {\n    if (this.isClosed()) {\n        this.points.splice(-1, 1);\n    }\n    return this.last();\n};\n\n// close path\nPath.prototype.close = function () {\n    if (this.points.length && !this.isClosed()) {\n        this.points.push(this.first());\n    }\n    return this.last();\n};\n\n// check if path is closed\nPath.prototype.isClosed = function () {\n    return (this.points.length > 1 && this.last() === this.first());\n};\n\n// could be bundled to .transform('translate' x,y,z) ?\n\n// translate path\nPath.prototype.translate = function (x, y, z) {\n    let i;\n    const v = Point.Cartesian.create(x, y, z);\n    const length = (this.isClosed()) ? this.points.length - 1 : this.points.length;\n    for (i = 0; i < length; i += 1) {\n        this.points[i].add(v);\n    }\n};\n\n// scale path\nPath.prototype.scale = function (x, y, z) {\n    let i;\n    const v = Point.Cartesian.create(x, y, z);\n    const length = (this.isClosed()) ? this.points.length - 1 : this.points.length;\n    for (i = 0; i < length; i += 1) {\n        this.points[i].scale(this.origin(), v);\n    }\n};\n\n// rotate path\nPath.prototype.rotate2D = function (rad) {\n    let i;\n    const length = (this.isClosed()) ? this.points.length - 1 : this.points.length;\n    for (i = 0; i < length; i += 1) {\n        this.points[i].rotate2D(this.origin(), rad);\n    }\n};\n\nexport default Path;\n","import Cartesian from './Point/Cartesian';\n\n////\n// Group is a Group of Cartesian Points\n////\n\nconst Group = function (x, y, z) {\n    Cartesian.call(this, x, y, z);\n\n    // control points\n    this.members = [];\n};\n\nGroup.prototype = Object.create(Cartesian.prototype);\nGroup.prototype.constructor = Group;\n\n// Operations\n\nGroup.prototype.add = function (p) {\n    Cartesian.prototype.add.call(this, p);\n    const length = this.members.length;\n    for (let i = 0; i < length; i += 1) {\n        this.members[i].add(p);\n    }\n};\n\nGroup.prototype.substract = function (p) {\n    Cartesian.prototype.substract.call(this, p);\n    const length = this.members.length;\n    for (let i = 0; i < length; i += 1) {\n        this.members[i].substract(p);\n    }\n};\n\nGroup.prototype.multiply = function (p) {\n    Cartesian.prototype.multiply.call(this, p);\n    const length = this.members.length;\n    for (let i = 0; i < length; i += 1) {\n        this.members[i].multiply(p);\n    }\n};\n\n// world operations\n\nGroup.prototype.scale = function (origin, p) {\n    Cartesian.prototype.scale.call(this, origin, p);\n    const length = this.members.length;\n    for (let i = 0; i < length; i += 1) {\n        this.members[i].scale(origin, p);\n    }\n};\n\nGroup.prototype.rotate2D = function (origin, phi) {\n    Cartesian.prototype.rotate2D.call(this, origin, phi);\n    const length = this.members.length;\n    for (let i = 0; i < length; i += 1) {\n        this.members[i].rotate2Dy(origin, phi);\n    }\n};\n\n// operations with primitives\n\nGroup.prototype.translate = function (x, y, z) {\n    Cartesian.prototype.translate.call(this, x, y, z);\n    const length = this.members.length;\n    for (let i = 0; i < length; i += 1) {\n        this.members[i].translate(x, y, z);\n    }\n};\n\n// exports\n\nGroup.prototype.clone = function () {\n    const clone = new Group(this.x, this.y, this.z);\n    const length = this.members.length;\n    for (let i = 0; i < length; i += 1) {\n        clone.members[i] = this.members[i];\n    }\n    return clone;\n};\n\nGroup.prototype.toArray = function () {\n    const arr = [this.x, this.y, this.z];\n    const length = this.members.length;\n    for (let i = 0; i < length; i += 1) {\n        arr.push(this.members[i].x, this.members[i].y, this.members[i].z);\n    }\n    return arr;\n};\n\n// static methods\n\nGroup.create = function (x, y, z) {\n    //is point like\n    if (typeof x === 'object' && typeof x.clone === 'function') {\n        // is a a group already\n        if (typeof x.members !== 'undefined') {\n            return x;\n        }\n        // is a cartesian point\n        return new Group(x.x, x.y, x.z);\n    }\n    return new Group(x, y, z);\n};\n\n\nexport default Group;\n","import Path from './Path';\nimport Point from './Point';\n\n////\n// Polygon\n////\n\n/**\n * x translate\n * rotate\n * scale\n */\n\nconst Polygon = function (segments, radius, origin) {\n    const path = new Path(origin);\n    let i = 0;\n\n    //@see http://stackoverflow.com/a/7198179\n    const delta = (Math.PI * 2) / segments;\n\n    while (i < segments) {\n        const p = new Point.Polar(radius, i * delta);\n        const c = p.toCartesian();\n        path.add(c.x, c.y);\n        i += 1;\n    }\n    path.close();\n    this.path = path;\n};\n\n////\n// Rectangle\n////\n\nconst Rectangle = function (width, height, origin) {\n    const path = new Path(origin);\n\n    path.add(-width / 2, height / 2);\n    path.progress(width, 0);\n    path.progress(0, -height);\n    path.progress(-width, 0);\n    path.close();\n\n    this.path = path;\n};\n\n////\n// Star\n////\n\nconst Star = function (segments, outerRadius, innerRadius, origin) {\n    const path = new Path(origin);\n\n    const _point = function (radius, delta) {\n        let point = new Point.Polar(radius, delta);\n        point = point.toCartesian();\n        return point;\n    };\n\n    //@see http://stackoverflow.com/a/7198179\n    const rad0 = Math.PI / 2;\n    const delta = (Math.PI * 2) / segments;\n    let _delta;\n    let inner;\n    let outer;\n    let i = 0;\n\n    while (i < segments) {\n        _delta = (i * (delta)) - rad0;\n        outer = _point(outerRadius, _delta);\n        path.add(outer.x, outer.y);\n\n        if (i <= segments - 1) {\n            _delta += delta / 2;\n            inner = _point(innerRadius, _delta);\n            path.add(inner.x, inner.y);\n        }\n        i += 1;\n    }\n    path.close();\n    this.path = path;\n};\n\nexport {\n    Polygon,\n    Rectangle,\n    Star\n};\n","import Point from './Point';\nimport Group from './Group';\n\n/**\n * Rob Spencer's algorithm\n * @see http://scaledinnovation.com/analytics/splines/aboutSplines.html\n */\nconst smoothPoint = function (prev, curr, next, tension) {\n\n    //@TODO, this is a temporary workaround\n    curr = Group.create(curr); //expensive\n\n    if (!next || !prev) {\n        return curr;\n    }\n\n    //  prev.x,prev.y,curr.x,curr.y are the coordinates of the end (knot) pts of this segment\n    //  next.x,next.y is the next knot -- not connected here but needed to calculate p2\n    //  p1 is the control curr calculated here, from curr.x back toward prev.x.\n    //  p2 is the next control curr, calculated here and returned to become the\n    //  next segment's p1.\n    //  t is the 'tension' which controls how far the control currs spread.\n\n    //  Scaling factors: distances from this knot to the previous and following knots\n\n    /* eslint-disable no-restricted-properties */\n    const d01 = Math.sqrt(Math.pow(curr.x - prev.x, 2) + Math.pow(curr.y - prev.y, 2));\n    const d12 = Math.sqrt(Math.pow(next.x - curr.x, 2) + Math.pow(next.y - curr.y, 2));\n    /* eslint-enable no-restricted-properties */\n\n    const fa = tension * (d01 / (d01 + d12)); // scaling factor for triangle Ta\n    const fb = tension - fa; // ditto for Tb, simplifies to fb=t-fa\n\n    const p1x = curr.x + (fa * (prev.x - next.x)); // x2-x0 is the width of triangle T\n    const p1y = curr.y + (fa * (prev.y - next.y)); // y2-y0 is the height of T\n\n    const p2x = curr.x - (fb * (prev.x - next.x));\n    const p2y = curr.y - (fb * (prev.y - next.y));\n\n    //return [new curr.Cartesian(p1x, p1y), new curr.Cartesian(p2x, p2y)];\n\n    curr.members[0] = new Point.Cartesian(p1x, p1y);\n    curr.members[1] = new Point.Cartesian(p2x, p2y);\n\n    // Everything else in the code is just bookkeeping.\n    // In these sketches we found two control points, but for different bezier curves:\n    //  - control point p1 (Figure 4) is needed to draw the left bezier (red in Figures 1 & 2)\n    //  - and p2 is needed to draw the right (orange) bezier.\n    // This just means that we have to calculate all of the control points\n    // (or at least those a knot fore and aft of where we are) before drawing.\n    // Closed curves need the control points at the \"beginning\" and \"end\" points (wherever you start and end),\n    // more bookkeeping.\n    // But the result is a simple, fast bezier spline routine with only one parameter to adjust the curvature.\n\n    // Note in the demo that when t=0 the curves become straight lines connecting the knot points,\n    // and when t=1 the curves are \"too curvy\" for the open zigzag curve,\n    // but actually for the square (lower left), t=1 makes a nice \"rounded square\" that might be a useful shape.\n    // There is no upper bound to t, but above t=1 you're almost guaranteed to get distracting cusps and loops.\n    // For that matter, t can be negative, which is great for drawing knots.\n\n    return curr;\n};\n\nconst smoothPath = function (path, curviness) {\n    //@TODO, only sections params\n    //@TODO, cache handles\n    let bezier;\n    const length = (path.isClosed()) ? path.points.length - 1 : path.points.length;\n    for (let i = 0; i < length; i += 1) {\n        bezier = smoothPoint(path.prev(i), path.get(i), path.next(i), curviness);\n        path.set(i, bezier);\n    }\n\n};\n\nexport default {\n    smoothPath,\n    smoothPoint\n};\n","import Point from './Point';\nimport Path from './Path';\nimport Group from './Group';\nimport * as Polygons from './Polygon';\nimport Bezier from './Bezier';\n\nconst Module = {\n    Point,\n    Path,\n    Group,\n    Bezier\n};\n\n// hm...\nObject.keys(Polygons).forEach((key) => {\n    Module[key] = Polygons[key];\n});\n\nexport default Module;\n"],"names":["Spherical","r","phi","theta","prototype","x","Math","sin","cos","y","z","toCartesian","Cartesian","lat","PI","lng","Polar","sqrt","pow","atan2","acos","toPolar","toSpherical","add","p","substract","multiply","scale","origin","rotate2D","translate","equals","clone","toArray","create","Point","World","Error","locate","point","Path","call","points","Object","constructor","addPoint","v","isClosed","splice","length","push","progress","last","set","index","closed","open","close","get","undefined","first","prev","next","i","rad","Group","members","rotate2Dy","arr","Polygon","segments","radius","path","delta","c","Rectangle","width","height","Star","outerRadius","innerRadius","_point","rad0","_delta","inner","outer","smoothPoint","curr","tension","d01","d12","fa","fb","p1x","p1y","p2x","p2y","smoothPath","curviness","bezier","Module","keys","Polygons","forEach","key"],"mappings":"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"}