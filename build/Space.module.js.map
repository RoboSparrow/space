{"version":3,"file":null,"sources":["../src/Point/Spherical.js","../src/Point/Polar.js","../src/Point/Cartesian.js","../src/Point.js","../src/World.js","../src/Path.js","../src/Group.js","../src/Polygon.js","../src/Bezier.js","../src/Space.js"],"sourcesContent":["import Cartesian from './Cartesian';\n\n////\n// Spherical\n////\n\nconst Spherical = function (r, phi, theta) {\n    this.r = r || 0;            // distance\n    this.phi = phi || 0;        // polar angle\n    this.theta = theta || 0;    // azimuthal angle\n};\n\n//// Spherical conversions\n\n// Cartesian\n\nSpherical.prototype.x = function () {\n    return this.r * Math.sin(this.theta) * Math.cos(this.phi);\n};\n\nSpherical.prototype.y = function () {\n    return this.r * Math.sin(this.theta) * Math.sin(this.phi);\n};\n\nSpherical.prototype.z = function () {\n    return this.r * Math.cos(this.theta);\n};\n\nSpherical.prototype.toCartesian = function () {\n    return new Cartesian(this.x(), this.y(), this.z());\n};\n\n// Geographical\n// https://vvvv.org/blog/polar-spherical-and-geographic-coordinates\n\nSpherical.prototype.lat = function () {\n    return this.phi - (Math.PI / 2);\n};\n\nSpherical.prototype.lng = function () {\n    return this.theta;\n};\n\nexport default Spherical;\n","import Cartesian from './Cartesian';\n\n////\n// Polar\n////\n\nconst Polar = function (r, phi) {\n    this.r = r || 0;            // distance\n    this.phi = phi || 0;        // polar angle\n};\n\n//// Polar conversions\n\n// Cartesian\n\nPolar.prototype.x = function () {\n    return this.r * Math.cos(this.phi);\n};\n\nPolar.prototype.y = function () {\n    return this.r * Math.sin(this.phi);\n};\n\nPolar.prototype.toCartesian = function () {\n    return new Cartesian(this.x(), this.y());\n};\n\nexport default Polar;\n","import Spherical from './Spherical';\nimport Polar from './Polar';\n\n////\n// Cartesian\n////\n\nconst Cartesian = function (x, y, z) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n};\n\n// Convert to Spherical\n\nCartesian.prototype.r = function () {\n    // eslint-disable-next-line no-restricted-properties\n    return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2) + Math.pow(this.z, 2));\n};\n\nCartesian.prototype.phi = function () {\n    return Math.atan2(this.y, this.x);\n};\n\nCartesian.prototype.theta = function () {\n    return Math.acos(this.z / this.r());\n};\n\n//@TODO test\nCartesian.prototype.toPolar = function () {\n    return new Polar(this.r(), this.phi());\n};\n\nCartesian.prototype.toSpherical = function () {\n    return new Spherical(this.r(), this.phi(), this.theta());\n};\n\n// Geographical\n// https://vvvv.org/blog/polar-spherical-and-geographic-coordinates\n\nCartesian.prototype.lat = function () {\n    return this.phi() - (Math.PI / 2);\n};\n\nCartesian.prototype.lng = function () {\n    return this.theta();\n};\n\n// Operations\n\nCartesian.prototype.add = function (p) {\n    this.x += p.x;\n    this.y += p.y;\n    this.z += p.z;\n};\n\nCartesian.prototype.substract = function (p) {\n    this.x -= p.x;\n    this.y -= p.y;\n    this.z -= p.z;\n};\n\nCartesian.prototype.multiply = function (p) {\n    this.x *= p.x;\n    this.y *= p.y;\n    this.z *= p.z;\n};\n\n// world operations\n\nCartesian.prototype.scale = function (origin, p) {\n    this.substract(origin);\n    this.multiply(p);\n    this.add(origin);\n};\n\nCartesian.prototype.rotate2D = function (origin, phi) {\n    this.substract(origin);\n    let p = this.toPolar();\n    p.phi += phi;\n    p = p.toCartesian();\n    this.x = p.x;\n    this.y = p.y;\n    this.add(origin);\n};\n\n// operations with primitives\n\nCartesian.prototype.translate = function (x, y, z) {\n    x = x || 0;\n    y = y || 0;\n    z = z || 0;\n    this.x += x;\n    this.y += y;\n    this.z += z;\n};\n\n// comparasion\n\nCartesian.prototype.equals = function (p) {\n    return ((this.x === p.x) && (this.y === p.y) && (this.z === p.z));\n};\n\n// min, max\n\nCartesian.prototype.min = function (v) {\n    this.x = (this.x > v.x) ? v.x : this.x;\n    this.y = (this.y > v.y) ? v.y : this.y;\n};\n\nCartesian.prototype.max = function (v) {\n    this.x = (this.x < v.x) ? v.x : this.x;\n    this.y = (this.y < v.y) ? v.y : this.y;\n};\n\n// exports\n\nCartesian.prototype.clone = function () {\n    return new Cartesian(this.x, this.y, this.z);\n};\n\nCartesian.prototype.toArray = function () {\n    return [this.x, this.y, this.z];\n};\n\n// static methods\n\nCartesian.create = function (x, y, z) {\n    if (typeof x === 'object' && typeof x.clone === 'function') {\n        return x;\n    }\n    return new Cartesian(x, y, z);\n};\n\nexport default Cartesian;\n","import Cartesian from './Point/Cartesian';\nimport Spherical from './Point/Spherical';\nimport Polar from './Point/Polar';\n\nconst Point = {\n    Cartesian,\n    Spherical,\n    Polar\n};\n\nexport default Point;\n","const World = function (origin) {\n    origin = origin || null;\n\n    if (!origin || typeof origin.clone !== 'function') {\n        throw Error('World constructor requires a Space.Point.Cartesian instance');\n    }\n\n    this.origin = function () {\n        return origin.clone();\n    };\n\n    this.locate = function (point) {\n        point.add(origin);\n        return point;\n    };\n};\n\nexport default World;\n","import Point from './Point';\nimport World from './World';\n\nconst Path = function (x, y, z) {\n    const origin = Point.Cartesian.create(x, y, z);\n    World.call(this, origin);\n\n    this.points = [];\n};\n\nPath.prototype = Object.create(World.prototype);\nPath.prototype.constructor = Path;\n\n// push to points, consider closed\nPath.prototype.addPoint = function (v) {\n    if (this.isClosed()) {\n        this.points.splice(this.points.length - 1, 0, v);\n    } else {\n        this.points.push(v);\n    }\n};\n\n// replace (or set) a point at a specified index, updates closed index, doe NOT locate point to origin\nPath.prototype.replace = function (index, v) {\n    const closed = this.isClosed();\n    if (closed) {\n        this.open();\n    }\n    this.points[index] = v;\n    if (closed) {\n        this.close();\n    }\n};\n\n// add coords relative to origin\nPath.prototype.add = function (x, y, z) {\n    const v = this.locate(Point.Cartesian.create(x, y, z));\n    this.addPoint(v);\n};\n\n// relatve coords from last point\nPath.prototype.progress = function (x, y, z) {\n    if (!this.points.length) {\n        throw new Error('Path error: cannot progress on an empty path');\n    }\n    const v = Point.Cartesian.create(x, y, z);\n    v.add(this.last());\n    this.addPoint(v);\n};\n\n// replace (or set) a point at a specified index, updates closed index\nPath.prototype.set = function (index, x, y, z) {\n    this.replace(index, this.locate(Point.Cartesian.create(x, y, z)));\n};\n\n// get a point for index\nPath.prototype.get = function (index) {\n    return (this.points[index] !== undefined) ? this.points[index] : null;\n};\n\n// get last point\nPath.prototype.last = function () {\n    return (this.points.length) ? this.points[this.points.length - 1] : null;\n};\n\n// get first point\nPath.prototype.first = function () {\n    return (this.points.length) ? this.points[0] : null;\n};\n\n// get  adjascent point for index\nPath.prototype.prev = function (index) {\n    if (!this.isClosed()) {\n        return this.get(index - 1);\n    }\n    // if closed the last item in array === first\n    return (index === 0) ? this.get(this.points.length - 2) : this.get(index - 1);\n};\n\n// get descendant point for index\nPath.prototype.next = function (index) {\n    if (!this.isClosed()) {\n        return this.get(index + 1);\n    }\n    return (index === this.points.length - 1) ? this.first() : this.get(index + 1);\n};\n\n// open path\nPath.prototype.open = function () {\n    if (this.isClosed()) {\n        this.points.splice(-1, 1);\n    }\n    return this.last();\n};\n\n// close path\nPath.prototype.close = function () {\n    if (this.points.length && !this.isClosed()) {\n        this.points.push(this.first());\n    }\n    return this.last();\n};\n\n// check if path is closed\nPath.prototype.isClosed = function () {\n    return (this.points.length > 1 && this.last() === this.first());\n};\n\n// bounding box\n//@TODO\nPath.prototype.bounds = function () {\n    if (!this.points.length) {\n        return null;\n    }\n    const min = this.first().clone();\n    const max = this.first().clone();\n    const length = (this.isClosed()) ? this.points.length - 1 : this.points.length;\n    for (let i = 0; i < length; i += 1) {\n        min.min(this.points[i]);\n        max.max(this.points[i]);\n    }\n    //TODO point.between()\n    const center = min.clone();\n    center.translate((max.x - min.x) / 2, (max.y - min.y) / 2, (max.z - min.z) / 2);\n    return { min, max, center };\n};\n\n// could be bundled to .transform('translate' x,y,z) ?\n\n// translate path\nPath.prototype.translate = function (x, y, z) {\n    let i;\n    const v = Point.Cartesian.create(x, y, z);\n    const length = (this.isClosed()) ? this.points.length - 1 : this.points.length;\n    for (i = 0; i < length; i += 1) {\n        this.points[i].add(v);\n    }\n};\n\n// scale path\nPath.prototype.scale = function (x, y, z) {\n    let i;\n    const v = Point.Cartesian.create(x, y, z);\n    const length = (this.isClosed()) ? this.points.length - 1 : this.points.length;\n    for (i = 0; i < length; i += 1) {\n        this.points[i].scale(this.origin(), v);\n    }\n};\n\n// rotate path\nPath.prototype.rotate2D = function (rad) {\n    let i;\n    const length = (this.isClosed()) ? this.points.length - 1 : this.points.length;\n    for (i = 0; i < length; i += 1) {\n        this.points[i].rotate2D(this.origin(), rad);\n    }\n};\n\nexport default Path;\n","import Cartesian from './Point/Cartesian';\n\n////\n// Group is a Group of Cartesian Points\n////\n\nconst Group = function (x, y, z) {\n    Cartesian.call(this, x, y, z);\n\n    // control points\n    this.members = [];\n};\n\nGroup.prototype = Object.create(Cartesian.prototype);\nGroup.prototype.constructor = Group;\n\n// Operations\n\nGroup.prototype.add = function (p) {\n    Cartesian.prototype.add.call(this, p);\n    const length = this.members.length;\n    for (let i = 0; i < length; i += 1) {\n        this.members[i].add(p);\n    }\n};\n\nGroup.prototype.substract = function (p) {\n    Cartesian.prototype.substract.call(this, p);\n    const length = this.members.length;\n    for (let i = 0; i < length; i += 1) {\n        this.members[i].substract(p);\n    }\n};\n\nGroup.prototype.multiply = function (p) {\n    Cartesian.prototype.multiply.call(this, p);\n    const length = this.members.length;\n    for (let i = 0; i < length; i += 1) {\n        this.members[i].multiply(p);\n    }\n};\n\n// world operations\n\nGroup.prototype.scale = function (origin, p) {\n    Cartesian.prototype.scale.call(this, origin, p);\n    const length = this.members.length;\n    for (let i = 0; i < length; i += 1) {\n        this.members[i].scale(origin, p);\n    }\n};\n\nGroup.prototype.rotate2D = function (origin, phi) {\n    Cartesian.prototype.rotate2D.call(this, origin, phi);\n    const length = this.members.length;\n    for (let i = 0; i < length; i += 1) {\n        this.members[i].rotate2Dy(origin, phi);\n    }\n};\n\n// operations with primitives\n\nGroup.prototype.translate = function (x, y, z) {\n    Cartesian.prototype.translate.call(this, x, y, z);\n    const length = this.members.length;\n    for (let i = 0; i < length; i += 1) {\n        this.members[i].translate(x, y, z);\n    }\n};\n\n// exports\n\nGroup.prototype.clone = function () {\n    const clone = new Group(this.x, this.y, this.z);\n    const length = this.members.length;\n    for (let i = 0; i < length; i += 1) {\n        clone.members[i] = this.members[i];\n    }\n    return clone;\n};\n\nGroup.prototype.toArray = function () {\n    const arr = [this.x, this.y, this.z];\n    const length = this.members.length;\n    for (let i = 0; i < length; i += 1) {\n        arr.push(this.members[i].x, this.members[i].y, this.members[i].z);\n    }\n    return arr;\n};\n\n// static methods\n\nGroup.create = function (x, y, z) {\n    //is point like\n    if (typeof x === 'object' && typeof x.clone === 'function') {\n        // is a a group already\n        if (typeof x.members !== 'undefined') {\n            return x;\n        }\n        // is a cartesian point\n        return new Group(x.x, x.y, x.z);\n    }\n    return new Group(x, y, z);\n};\n\n\nexport default Group;\n","import Path from './Path';\nimport Point from './Point';\n\n////\n// Polygon\n////\n\n/**\n * x translate\n * rotate\n * scale\n */\n\nconst Polygon = function (segments, radius, origin) {\n    const path = new Path(origin);\n    let i = 0;\n\n    //@see http://stackoverflow.com/a/7198179\n    const delta = (Math.PI * 2) / segments;\n\n    while (i < segments) {\n        const p = new Point.Polar(radius, i * delta);\n        const c = p.toCartesian();\n        path.add(c.x, c.y);\n        i += 1;\n    }\n    path.close();\n    this.path = path;\n};\n\n////\n// Rectangle\n////\n\nconst Rectangle = function (width, height, origin) {\n    const path = new Path(origin);\n\n    path.add(-width / 2, height / 2);\n    path.progress(width, 0);\n    path.progress(0, -height);\n    path.progress(-width, 0);\n    path.close();\n\n    this.path = path;\n};\n\n////\n// Star\n////\n\nconst Star = function (segments, outerRadius, innerRadius, origin) {\n    const path = new Path(origin);\n\n    const _point = function (radius, delta) {\n        let point = new Point.Polar(radius, delta);\n        point = point.toCartesian();\n        return point;\n    };\n\n    //@see http://stackoverflow.com/a/7198179\n    const rad0 = Math.PI / 2;\n    const delta = (Math.PI * 2) / segments;\n    let _delta;\n    let inner;\n    let outer;\n    let i = 0;\n\n    while (i < segments) {\n        _delta = (i * (delta)) - rad0;\n        outer = _point(outerRadius, _delta);\n        path.add(outer.x, outer.y);\n\n        if (i <= segments - 1) {\n            _delta += delta / 2;\n            inner = _point(innerRadius, _delta);\n            path.add(inner.x, inner.y);\n        }\n        i += 1;\n    }\n    path.close();\n    this.path = path;\n};\n\nexport {\n    Polygon,\n    Rectangle,\n    Star\n};\n","import Point from './Point';\nimport Group from './Group';\n\n/**\n * Rob Spencer's algorithm\n * @see http://scaledinnovation.com/analytics/splines/aboutSplines.html\n * @TODO angles. Angles from tangent (positive, negative) It might be worth to check if we can use Point.polar ops in general\n * @TODO tension as absolute progression value (pixels) if tension is an array add instead multiply\n * function bezier(prev, curr, next, [100, 50], [45, -25])\n */\nconst smoothPoint = function (prev, curr, next, tension) {\n\n    //@TODO, this is a temporary workaround\n    curr = Group.create(curr); //expensive\n\n    if (!next || !prev) {\n        return curr;\n    }\n\n    //  prev.x,prev.y,curr.x,curr.y are the coordinates of the end (knot) pts of this segment\n    //  next.x,next.y is the next knot -- not connected here but needed to calculate p2\n    //  p1 is the control curr calculated here, from curr.x back toward prev.x.\n    //  p2 is the next control curr, calculated here and returned to become the\n    //  next segment's p1.\n    //  t is the 'tension' which controls how far the control currs spread.\n\n    //  Scaling factors: distances from this knot to the previous and following knots\n\n    /* eslint-disable no-restricted-properties */\n    const d01 = Math.sqrt(Math.pow(curr.x - prev.x, 2) + Math.pow(curr.y - prev.y, 2));\n    const d12 = Math.sqrt(Math.pow(next.x - curr.x, 2) + Math.pow(next.y - curr.y, 2));\n    /* eslint-enable no-restricted-properties */\n\n    const fa = tension * (d01 / (d01 + d12)); // scaling factor for triangle Ta\n    const fb = tension - fa; // ditto for Tb, simplifies to fb=t-fa\n\n    const p1x = curr.x + (fa * (prev.x - next.x)); // x2-x0 is the width of triangle T\n    const p1y = curr.y + (fa * (prev.y - next.y)); // y2-y0 is the height of T\n\n    const p2x = curr.x - (fb * (prev.x - next.x));\n    const p2y = curr.y - (fb * (prev.y - next.y));\n\n    //return [new curr.Cartesian(p1x, p1y), new curr.Cartesian(p2x, p2y)];\n\n    curr.members[0] = new Point.Cartesian(p1x, p1y);\n    curr.members[1] = new Point.Cartesian(p2x, p2y);\n\n    // Everything else in the code is just bookkeeping.\n    // In these sketches we found two control points, but for different bezier curves:\n    //  - control point p1 (Figure 4) is needed to draw the left bezier (red in Figures 1 & 2)\n    //  - and p2 is needed to draw the right (orange) bezier.\n    // This just means that we have to calculate all of the control points\n    // (or at least those a knot fore and aft of where we are) before drawing.\n    // Closed curves need the control points at the \"beginning\" and \"end\" points (wherever you start and end),\n    // more bookkeeping.\n    // But the result is a simple, fast bezier spline routine with only one parameter to adjust the curvature.\n\n    // Note in the demo that when t=0 the curves become straight lines connecting the knot points,\n    // and when t=1 the curves are \"too curvy\" for the open zigzag curve,\n    // but actually for the square (lower left), t=1 makes a nice \"rounded square\" that might be a useful shape.\n    // There is no upper bound to t, but above t=1 you're almost guaranteed to get distracting cusps and loops.\n    // For that matter, t can be negative, which is great for drawing knots.\n\n    return curr;\n};\n\nconst smoothPath = function (path, curviness) {\n    //@TODO, only sections params\n    //@TODO, cache handles\n    let bezier;\n    const length = (path.isClosed()) ? path.points.length - 1 : path.points.length;\n    for (let i = 0; i < length; i += 1) {\n        bezier = smoothPoint(path.prev(i), path.get(i), path.next(i), curviness);\n        path.replace(i, bezier);\n    }\n};\n\nexport default {\n    smoothPath,\n    smoothPoint\n};\n","import Point from './Point';\nimport Path from './Path';\nimport Group from './Group';\nimport * as Polygons from './Polygon';\nimport Bezier from './Bezier';\n\nconst Module = {\n    Point,\n    Path,\n    Group,\n    Bezier\n};\n\n// hm...\nObject.keys(Polygons).forEach((key) => {\n    Module[key] = Polygons[key];\n});\n\nexport default Module;\n"],"names":["Spherical","r","phi","theta","prototype","x","Math","sin","cos","y","z","toCartesian","Cartesian","lat","PI","lng","Polar","sqrt","pow","atan2","acos","toPolar","toSpherical","add","p","substract","multiply","scale","origin","rotate2D","translate","equals","min","v","max","clone","toArray","create","Point","World","Error","locate","point","Path","call","points","Object","constructor","addPoint","isClosed","splice","length","push","replace","index","closed","open","close","progress","last","set","get","undefined","first","prev","next","bounds","i","center","rad","Group","members","rotate2Dy","arr","Polygon","segments","radius","path","delta","c","Rectangle","width","height","Star","outerRadius","innerRadius","_point","rad0","_delta","inner","outer","smoothPoint","curr","tension","d01","d12","fa","fb","p1x","p1y","p2x","p2y","smoothPath","curviness","bezier","Module","keys","Polygons","forEach","key"],"mappings":"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"}