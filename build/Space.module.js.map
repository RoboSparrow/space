{"version":3,"file":null,"sources":["../src/Point.js","../src/Path.js","../src/Polygon.js","../src/Space.js"],"sourcesContent":["const Point = {};\n\n////\n// Point.Cartesian\n////\n\nPoint.Cartesian = function (x, y, z) {\n    this.x = Math.round(x) || 0;\n    this.y = Math.round(y) || 0;\n    this.z = Math.round(z) || 0;\n};\n\n// Convert to Spherical\n\nPoint.Cartesian.prototype.r = function () {\n    // eslint-disable-next-line no-restricted-properties\n    return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2) + Math.pow(this.z, 2));\n};\n\nPoint.Cartesian.prototype.phi = function () {\n    return Math.atan2(this.y, this.x);\n};\n\nPoint.Cartesian.prototype.theta = function () {\n    return Math.acos(this.z / this.r());\n};\n\nPoint.Cartesian.prototype.toSpherical = function () {\n    return new Point.Spherical(this.r(), this.phi(), this.theta());\n};\n\n// Geographical\n// https://vvvv.org/blog/polar-spherical-and-geographic-coordinates\n\nPoint.Cartesian.prototype.lat = function () {\n    return this.phi() - (Math.PI / 2);\n};\n\nPoint.Cartesian.prototype.lng = function () {\n    return this.theta();\n};\n\n// Ops\n\nPoint.Cartesian.prototype.clone = function () {\n    return new Point.Cartesian(this.x, this.y, this.z);\n};\n\nPoint.Cartesian.prototype.multiply = function (p) {\n    this.x *= p.x;\n    this.y *= p.y;\n    this.z *= p.z;\n};\n\nPoint.Cartesian.prototype.add = function (p) {\n    this.x += p.x;\n    this.y += p.y;\n    this.z += p.z;\n};\n\nPoint.Cartesian.prototype.substract = function (p) {\n    this.x -= p.x;\n    this.y -= p.y;\n    this.z -= p.z;\n};\n\nPoint.Cartesian.prototype.equals = function (p) {\n    return ((this.x === p.x) && (this.y === p.y) && (this.z === p.z));\n};\n\n////\n// Point.Polar\n////\n\nPoint.Polar = function (r, phi) {\n    this.r = r || 0;            // distance\n    this.phi = phi || 0;        // polar angle\n};\n\n//// Point.Polar conversions\n\n// Cartesian\n\nPoint.Polar.prototype.x = function () {\n    return this.r * Math.cos(this.phi);\n};\n\nPoint.Polar.prototype.y = function () {\n    return this.r * Math.sin(this.phi);\n};\n\nPoint.Polar.prototype.toCartesian = function () {\n    return new Point.Cartesian(this.x(), this.y());\n};\n\n\n////\n// Point.Spherical\n////\n\nPoint.Spherical = function (r, phi, theta) {\n    this.r = r || 0;            // distance\n    this.phi = phi || 0;        // polar angle\n    this.theta = theta || 0;    // azimuthal angle\n};\n\n//// Point.Spherical conversions\n\n// Cartesian\n\nPoint.Spherical.prototype.x = function () {\n    return this.r * Math.sin(this.theta) * Math.cos(this.phi);\n};\n\nPoint.Spherical.prototype.y = function () {\n    return this.r * Math.sin(this.theta) * Math.sin(this.phi);\n};\n\nPoint.Spherical.prototype.z = function () {\n    return this.r * Math.cos(this.theta);\n};\n\nPoint.Spherical.prototype.toCartesian = function () {\n    return new Point.Cartesian(this.x(), this.y(), this.z());\n};\n\n// Geographical\n// https://vvvv.org/blog/polar-spherical-and-geographic-coordinates\n\nPoint.Spherical.prototype.lat = function () {\n    return this.phi - (Math.PI / 2);\n};\n\nPoint.Spherical.prototype.lng = function () {\n    return this.theta;\n};\n\nexport default Point;\n","//https://github.com/d3/d3-path/blob/master/src/path.js\nimport Point from './Point';\n\n/*\n * @TODO:\n * tranlate point\n * scale\n * rotate\n * arc\n */\nconst createPoint = function (x, y, z) {\n    if (typeof x === 'object' && typeof x.clone === 'function') {\n        return x;\n    }\n    return new Point.Cartesian(x, y, z);\n};\n\nconst Path = function (x, y, z) {\n    this.points = [];\n\n    const origin = createPoint(x, y, z);\n\n    this.world = function (v) {\n        v.add(origin);\n        return v;\n    };\n\n    this.origin = function () {\n        return origin.clone();\n    };\n};\n\n// push to points, consider closed\nPath.prototype.addPoint = function (v) {\n    if (this.isClosed()) {\n        this.points.splice(this.points.length - 1, 0, v);\n    } else {\n        this.points.push(v);\n    }\n};\n\n// add coords relative to origin\nPath.prototype.add = function (x, y, z) {\n    const v = this.world(createPoint(x, y, z));\n    this.addPoint(v);\n};\n\n// relatve coords from last point\nPath.prototype.progress = function (x, y, z) {\n    if (!this.points.length) {\n        throw new Error('Path error: cannot progress on an empty path');\n    }\n    const v = createPoint(x, y, z);\n    const p = this.last().clone();\n    p.add(v);\n    this.addPoint(p);\n};\n\nPath.prototype.last = function () {\n    return (this.points.length) ? this.points[this.points.length - 1] : null;\n};\n\nPath.prototype.first = function () {\n    return (this.points.length) ? this.points[0] : null;\n};\n\nPath.prototype.open = function () {\n    if (this.isClosed()) {\n        this.points.splice(-1, 1);\n    }\n    return this.last();\n};\n\nPath.prototype.close = function () {\n    if (this.points.length && !this.isClosed()) {\n        this.points.push(this.first());\n    }\n    return this.last();\n};\n\nPath.prototype.isClosed = function () {\n    return (this.points.length > 1 && this.last() === this.first());\n};\n\nPath.prototype.translate = function (x, y, z) {\n    let i;\n    const v = createPoint(x, y, z);\n    const length = (this.isClosed()) ? this.points.length - 1 : this.points.length;\n    for (i = 0; i < length; i += 1) {\n        this.points[i].add(v);\n    }\n};\n\nexport default Path;\n","import Path from './Path';\nimport Point from './Point';\n\n////\n// Polygon\n////\n\n/**\n * x translate\n * rotate\n * scale\n */\n\nconst Polygon = function (segments, radius, origin) {\n    const path = new Path(origin);\n    let i = 0;\n\n    //@see http://stackoverflow.com/a/7198179\n    const delta = (Math.PI * 2) / segments;\n\n    while (i < segments) {\n        const p = new Point.Polar(radius, i * delta);\n        const c = p.toCartesian();\n        path.add(c.x, c.y);\n        i += 1;\n    }\n    path.close();\n    this.path = path;\n};\n\n////\n// Rectangle\n////\n\nconst Rectangle = function (width, height, origin) {\n    const path = new Path(origin);\n\n    //@see http://stackoverflow.com/a/7198179\n    const first = path.origin();\n    first.add(new Point.Cartesian(-width / 2, height / 2));\n\n    path.add(first);\n    path.progress(width, 0);\n    path.progress(0, -height);\n    path.progress(-width, 0);\n    path.close();\n\n    this.path = path;\n};\n\n////\n// Star\n////\n\nconst Star = function (segments, outerRadius, innerRadius, origin) {\n    const path = new Path(origin);\n\n    const _point = function (radius, delta) {\n        let point = new Point.Polar(radius, delta);\n        point = point.toCartesian();\n        return point;\n    };\n\n    //@see http://stackoverflow.com/a/7198179\n    const rad0 = Math.PI / 2;\n    const delta = (Math.PI * 2) / segments;\n    let _delta;\n    let inner;\n    let outer;\n    let i = 0;\n\n    while (i < segments) {\n        _delta = (i * (delta)) - rad0;\n        outer = _point(outerRadius, _delta);\n        path.add(outer.x, outer.y);\n\n        if (i <= segments - 1) {\n            _delta += delta / 2;\n            inner = _point(innerRadius, _delta);\n            path.add(inner.x, inner.y);\n        }\n        i += 1;\n    }\n    path.close();\n    this.path = path;\n};\n\nexport {\n    Polygon,\n    Rectangle,\n    Star\n};\n","import Point from './Point';\nimport Path from './Path';\nimport * as Polygons from './Polygon';\n\nconst Module = {\n    Point,\n    Path\n};\n\n// hm...\nObject.keys(Polygons).forEach((key) => {\n    Module[key] = Polygons[key];\n});\n\nexport default Module;\n"],"names":["Point","Cartesian","x","y","z","Math","round","prototype","r","sqrt","pow","phi","atan2","theta","acos","toSpherical","Spherical","lat","PI","lng","clone","multiply","p","add","substract","equals","Polar","cos","sin","toCartesian","createPoint","Path","points","origin","world","v","addPoint","isClosed","splice","length","push","progress","Error","last","first","open","close","translate","i","Polygon","segments","radius","path","delta","c","Rectangle","width","height","Star","outerRadius","innerRadius","_point","point","rad0","_delta","inner","outer","Module","Object","keys","Polygons","forEach","key"],"mappings":"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"}