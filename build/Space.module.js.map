{"version":3,"file":null,"sources":["../src/Point.js","../src/Path.js","../src/Polygon.js","../src/Space.js"],"sourcesContent":["const Point = {};\n\n////\n// Point.Cartesian\n////\n\nPoint.Cartesian = function (x, y, z) {\n    this.x = Math.round(x) || 0;\n    this.y = Math.round(y) || 0;\n    this.z = Math.round(z) || 0;\n};\n\n// Convert to Spherical\n\nPoint.Cartesian.prototype.r = function () {\n    // eslint-disable-next-line no-restricted-properties\n    return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2) + Math.pow(this.z, 2));\n};\n\nPoint.Cartesian.prototype.phi = function () {\n    return Math.atan2(this.y, this.x);\n};\n\nPoint.Cartesian.prototype.theta = function () {\n    return Math.acos(this.z / this.r());\n};\n\n//@TODO test\nPoint.Cartesian.prototype.toPolar = function () {\n    return new Point.Polar(this.r(), this.phi());\n};\n\nPoint.Cartesian.prototype.toSpherical = function () {\n    return new Point.Spherical(this.r(), this.phi(), this.theta());\n};\n\n// Geographical\n// https://vvvv.org/blog/polar-spherical-and-geographic-coordinates\n\nPoint.Cartesian.prototype.lat = function () {\n    return this.phi() - (Math.PI / 2);\n};\n\nPoint.Cartesian.prototype.lng = function () {\n    return this.theta();\n};\n\n// Ops\n\nPoint.Cartesian.prototype.clone = function () {\n    return new Point.Cartesian(this.x, this.y, this.z);\n};\n\nPoint.Cartesian.prototype.multiply = function (p) {\n    this.x *= p.x;\n    this.y *= p.y;\n    this.z *= p.z;\n};\n\n//@TODO test\nPoint.Cartesian.prototype.scale = function (origin, p) {\n    this.substract(origin);\n    this.multiply(p);\n    this.add(origin);\n};\n\nPoint.Cartesian.prototype.rotate2D = function (origin, phi) {\n    this.substract(origin);\n    let p = this.toPolar();\n    p.phi += phi;\n    p = p.toCartesian();\n    this.x = p.x;\n    this.y = p.y;\n    this.add(origin);\n};\n\nPoint.Cartesian.prototype.add = function (p) {\n    this.x += p.x;\n    this.y += p.y;\n    this.z += p.z;\n};\n\nPoint.Cartesian.prototype.substract = function (p) {\n    this.x -= p.x;\n    this.y -= p.y;\n    this.z -= p.z;\n};\n\nPoint.Cartesian.prototype.equals = function (p) {\n    return ((this.x === p.x) && (this.y === p.y) && (this.z === p.z));\n};\n\nPoint.Cartesian.prototype.toArray = function () {\n    return [this.x, this.y, this.z];\n};\n\n////\n// Point.Polar\n////\n\nPoint.Polar = function (r, phi) {\n    this.r = r || 0;            // distance\n    this.phi = phi || 0;        // polar angle\n};\n\n//// Point.Polar conversions\n\n// Cartesian\n\nPoint.Polar.prototype.x = function () {\n    return this.r * Math.cos(this.phi);\n};\n\nPoint.Polar.prototype.y = function () {\n    return this.r * Math.sin(this.phi);\n};\n\nPoint.Polar.prototype.toCartesian = function () {\n    return new Point.Cartesian(this.x(), this.y());\n};\n\n\n////\n// Point.Spherical\n////\n\nPoint.Spherical = function (r, phi, theta) {\n    this.r = r || 0;            // distance\n    this.phi = phi || 0;        // polar angle\n    this.theta = theta || 0;    // azimuthal angle\n};\n\n//// Point.Spherical conversions\n\n// Cartesian\n\nPoint.Spherical.prototype.x = function () {\n    return this.r * Math.sin(this.theta) * Math.cos(this.phi);\n};\n\nPoint.Spherical.prototype.y = function () {\n    return this.r * Math.sin(this.theta) * Math.sin(this.phi);\n};\n\nPoint.Spherical.prototype.z = function () {\n    return this.r * Math.cos(this.theta);\n};\n\nPoint.Spherical.prototype.toCartesian = function () {\n    return new Point.Cartesian(this.x(), this.y(), this.z());\n};\n\n// Geographical\n// https://vvvv.org/blog/polar-spherical-and-geographic-coordinates\n\nPoint.Spherical.prototype.lat = function () {\n    return this.phi - (Math.PI / 2);\n};\n\nPoint.Spherical.prototype.lng = function () {\n    return this.theta;\n};\n\nexport default Point;\n","//https://github.com/d3/d3-path/blob/master/src/path.js\nimport Point from './Point';\n\n/*\n * @TODO:\n * tranlate point\n * scale\n * rotate\n * arc\n */\nconst createPoint = function (x, y, z) {\n    if (typeof x === 'object' && typeof x.clone === 'function') {\n        return x;\n    }\n    return new Point.Cartesian(x, y, z);\n};\n\nconst Path = function (x, y, z) {\n    this.points = [];\n\n    const origin = createPoint(x, y, z);\n\n    this.world = function (v) {\n        v.add(origin);\n        return v;\n    };\n\n    this.origin = function () {\n        return origin.clone();\n    };\n};\n\n// push to points, consider closed\nPath.prototype.addPoint = function (v) {\n    if (this.isClosed()) {\n        this.points.splice(this.points.length - 1, 0, v);\n    } else {\n        this.points.push(v);\n    }\n};\n\n// add coords relative to origin\nPath.prototype.add = function (x, y, z) {\n    const v = this.world(createPoint(x, y, z));\n    this.addPoint(v);\n};\n\n// relatve coords from last point\nPath.prototype.progress = function (x, y, z) {\n    if (!this.points.length) {\n        throw new Error('Path error: cannot progress on an empty path');\n    }\n    const v = createPoint(x, y, z);\n    const p = this.last().clone();\n    p.add(v);\n    this.addPoint(p);\n};\n\nPath.prototype.last = function () {\n    return (this.points.length) ? this.points[this.points.length - 1] : null;\n};\n\nPath.prototype.first = function () {\n    return (this.points.length) ? this.points[0] : null;\n};\n\nPath.prototype.open = function () {\n    if (this.isClosed()) {\n        this.points.splice(-1, 1);\n    }\n    return this.last();\n};\n\nPath.prototype.close = function () {\n    if (this.points.length && !this.isClosed()) {\n        this.points.push(this.first());\n    }\n    return this.last();\n};\n\nPath.prototype.isClosed = function () {\n    return (this.points.length > 1 && this.last() === this.first());\n};\n\nPath.prototype.translate = function (x, y, z) {\n    let i;\n    const v = createPoint(x, y, z);\n    const length = (this.isClosed()) ? this.points.length - 1 : this.points.length;\n    for (i = 0; i < length; i += 1) {\n        this.points[i].add(v);\n    }\n};\n\nPath.prototype.scale = function (x, y, z) {\n    let i;\n    const v = createPoint(x, y, z);\n    const length = (this.isClosed()) ? this.points.length - 1 : this.points.length;\n    for (i = 0; i < length; i += 1) {\n        this.points[i].scale(this.origin(), v);\n    }\n};\n\nPath.prototype.rotate2D = function (rad) {\n    let i;\n    const length = (this.isClosed()) ? this.points.length - 1 : this.points.length;\n    for (i = 0; i < length; i += 1) {\n        this.points[i].rotate2D(this.origin(), rad);\n    }\n};\n\nexport default Path;\n","import Path from './Path';\nimport Point from './Point';\n\n////\n// Polygon\n////\n\n/**\n * x translate\n * rotate\n * scale\n */\n\nconst Polygon = function (segments, radius, origin) {\n    const path = new Path(origin);\n    let i = 0;\n\n    //@see http://stackoverflow.com/a/7198179\n    const delta = (Math.PI * 2) / segments;\n\n    while (i < segments) {\n        const p = new Point.Polar(radius, i * delta);\n        const c = p.toCartesian();\n        path.add(c.x, c.y);\n        i += 1;\n    }\n    path.close();\n    this.path = path;\n};\n\n////\n// Rectangle\n////\n\nconst Rectangle = function (width, height, origin) {\n    const path = new Path(origin);\n\n    path.add(-width / 2, height / 2);\n    path.progress(width, 0);\n    path.progress(0, -height);\n    path.progress(-width, 0);\n    path.close();\n\n    this.path = path;\n};\n\n////\n// Star\n////\n\nconst Star = function (segments, outerRadius, innerRadius, origin) {\n    const path = new Path(origin);\n\n    const _point = function (radius, delta) {\n        let point = new Point.Polar(radius, delta);\n        point = point.toCartesian();\n        return point;\n    };\n\n    //@see http://stackoverflow.com/a/7198179\n    const rad0 = Math.PI / 2;\n    const delta = (Math.PI * 2) / segments;\n    let _delta;\n    let inner;\n    let outer;\n    let i = 0;\n\n    while (i < segments) {\n        _delta = (i * (delta)) - rad0;\n        outer = _point(outerRadius, _delta);\n        path.add(outer.x, outer.y);\n\n        if (i <= segments - 1) {\n            _delta += delta / 2;\n            inner = _point(innerRadius, _delta);\n            path.add(inner.x, inner.y);\n        }\n        i += 1;\n    }\n    path.close();\n    this.path = path;\n};\n\nexport {\n    Polygon,\n    Rectangle,\n    Star\n};\n","import Point from './Point';\nimport Path from './Path';\nimport * as Polygons from './Polygon';\n\nconst Module = {\n    Point,\n    Path\n};\n\n// hm...\nObject.keys(Polygons).forEach((key) => {\n    Module[key] = Polygons[key];\n});\n\nexport default Module;\n"],"names":["Point","Cartesian","x","y","z","Math","round","prototype","r","sqrt","pow","phi","atan2","theta","acos","toPolar","Polar","toSpherical","Spherical","lat","PI","lng","clone","multiply","p","scale","origin","substract","add","rotate2D","toCartesian","equals","toArray","cos","sin","createPoint","Path","points","world","v","addPoint","isClosed","splice","length","push","progress","Error","last","first","open","close","translate","i","rad","Polygon","segments","radius","path","delta","c","Rectangle","width","height","Star","outerRadius","innerRadius","_point","point","rad0","_delta","inner","outer","Module","Object","keys","Polygons","forEach","key"],"mappings":"AAAA,IAAMA,QAAQ,EAAd;;;;;;AAMAA,MAAMC,SAAN,GAAkB,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;SAC5BF,CAAL,GAASG,KAAKC,KAAL,CAAWJ,CAAX,KAAiB,CAA1B;SACKC,CAAL,GAASE,KAAKC,KAAL,CAAWH,CAAX,KAAiB,CAA1B;SACKC,CAAL,GAASC,KAAKC,KAAL,CAAWF,CAAX,KAAiB,CAA1B;CAHJ;;;;AAQAJ,MAAMC,SAAN,CAAgBM,SAAhB,CAA0BC,CAA1B,GAA8B,YAAY;;WAE/BH,KAAKI,IAAL,CAAUJ,KAAKK,GAAL,CAAS,KAAKR,CAAd,EAAiB,CAAjB,IAAsBG,KAAKK,GAAL,CAAS,KAAKP,CAAd,EAAiB,CAAjB,CAAtB,GAA4CE,KAAKK,GAAL,CAAS,KAAKN,CAAd,EAAiB,CAAjB,CAAtD,CAAP;CAFJ;;AAKAJ,MAAMC,SAAN,CAAgBM,SAAhB,CAA0BI,GAA1B,GAAgC,YAAY;WACjCN,KAAKO,KAAL,CAAW,KAAKT,CAAhB,EAAmB,KAAKD,CAAxB,CAAP;CADJ;;AAIAF,MAAMC,SAAN,CAAgBM,SAAhB,CAA0BM,KAA1B,GAAkC,YAAY;WACnCR,KAAKS,IAAL,CAAU,KAAKV,CAAL,GAAS,KAAKI,CAAL,EAAnB,CAAP;CADJ;;;AAKAR,MAAMC,SAAN,CAAgBM,SAAhB,CAA0BQ,OAA1B,GAAoC,YAAY;WACrC,IAAIf,MAAMgB,KAAV,CAAgB,KAAKR,CAAL,EAAhB,EAA0B,KAAKG,GAAL,EAA1B,CAAP;CADJ;;AAIAX,MAAMC,SAAN,CAAgBM,SAAhB,CAA0BU,WAA1B,GAAwC,YAAY;WACzC,IAAIjB,MAAMkB,SAAV,CAAoB,KAAKV,CAAL,EAApB,EAA8B,KAAKG,GAAL,EAA9B,EAA0C,KAAKE,KAAL,EAA1C,CAAP;CADJ;;;;;AAOAb,MAAMC,SAAN,CAAgBM,SAAhB,CAA0BY,GAA1B,GAAgC,YAAY;WACjC,KAAKR,GAAL,KAAcN,KAAKe,EAAL,GAAU,CAA/B;CADJ;;AAIApB,MAAMC,SAAN,CAAgBM,SAAhB,CAA0Bc,GAA1B,GAAgC,YAAY;WACjC,KAAKR,KAAL,EAAP;CADJ;;;;AAMAb,MAAMC,SAAN,CAAgBM,SAAhB,CAA0Be,KAA1B,GAAkC,YAAY;WACnC,IAAItB,MAAMC,SAAV,CAAoB,KAAKC,CAAzB,EAA4B,KAAKC,CAAjC,EAAoC,KAAKC,CAAzC,CAAP;CADJ;;AAIAJ,MAAMC,SAAN,CAAgBM,SAAhB,CAA0BgB,QAA1B,GAAqC,UAAUC,CAAV,EAAa;SACzCtB,CAAL,IAAUsB,EAAEtB,CAAZ;SACKC,CAAL,IAAUqB,EAAErB,CAAZ;SACKC,CAAL,IAAUoB,EAAEpB,CAAZ;CAHJ;;;AAOAJ,MAAMC,SAAN,CAAgBM,SAAhB,CAA0BkB,KAA1B,GAAkC,UAAUC,MAAV,EAAkBF,CAAlB,EAAqB;SAC9CG,SAAL,CAAeD,MAAf;SACKH,QAAL,CAAcC,CAAd;SACKI,GAAL,CAASF,MAAT;CAHJ;;AAMA1B,MAAMC,SAAN,CAAgBM,SAAhB,CAA0BsB,QAA1B,GAAqC,UAAUH,MAAV,EAAkBf,GAAlB,EAAuB;SACnDgB,SAAL,CAAeD,MAAf;QACIF,IAAI,KAAKT,OAAL,EAAR;MACEJ,GAAF,IAASA,GAAT;QACIa,EAAEM,WAAF,EAAJ;SACK5B,CAAL,GAASsB,EAAEtB,CAAX;SACKC,CAAL,GAASqB,EAAErB,CAAX;SACKyB,GAAL,CAASF,MAAT;CAPJ;;AAUA1B,MAAMC,SAAN,CAAgBM,SAAhB,CAA0BqB,GAA1B,GAAgC,UAAUJ,CAAV,EAAa;SACpCtB,CAAL,IAAUsB,EAAEtB,CAAZ;SACKC,CAAL,IAAUqB,EAAErB,CAAZ;SACKC,CAAL,IAAUoB,EAAEpB,CAAZ;CAHJ;;AAMAJ,MAAMC,SAAN,CAAgBM,SAAhB,CAA0BoB,SAA1B,GAAsC,UAAUH,CAAV,EAAa;SAC1CtB,CAAL,IAAUsB,EAAEtB,CAAZ;SACKC,CAAL,IAAUqB,EAAErB,CAAZ;SACKC,CAAL,IAAUoB,EAAEpB,CAAZ;CAHJ;;AAMAJ,MAAMC,SAAN,CAAgBM,SAAhB,CAA0BwB,MAA1B,GAAmC,UAAUP,CAAV,EAAa;WACnC,KAAKtB,CAAL,KAAWsB,EAAEtB,CAAd,IAAqB,KAAKC,CAAL,KAAWqB,EAAErB,CAAlC,IAAyC,KAAKC,CAAL,KAAWoB,EAAEpB,CAA9D;CADJ;;AAIAJ,MAAMC,SAAN,CAAgBM,SAAhB,CAA0ByB,OAA1B,GAAoC,YAAY;WACrC,CAAC,KAAK9B,CAAN,EAAS,KAAKC,CAAd,EAAiB,KAAKC,CAAtB,CAAP;CADJ;;;;;;AAQAJ,MAAMgB,KAAN,GAAc,UAAUR,CAAV,EAAaG,GAAb,EAAkB;SACvBH,CAAL,GAASA,KAAK,CAAd,CAD4B;SAEvBG,GAAL,GAAWA,OAAO,CAAlB,CAF4B;CAAhC;;;;;;AASAX,MAAMgB,KAAN,CAAYT,SAAZ,CAAsBL,CAAtB,GAA0B,YAAY;WAC3B,KAAKM,CAAL,GAASH,KAAK4B,GAAL,CAAS,KAAKtB,GAAd,CAAhB;CADJ;;AAIAX,MAAMgB,KAAN,CAAYT,SAAZ,CAAsBJ,CAAtB,GAA0B,YAAY;WAC3B,KAAKK,CAAL,GAASH,KAAK6B,GAAL,CAAS,KAAKvB,GAAd,CAAhB;CADJ;;AAIAX,MAAMgB,KAAN,CAAYT,SAAZ,CAAsBuB,WAAtB,GAAoC,YAAY;WACrC,IAAI9B,MAAMC,SAAV,CAAoB,KAAKC,CAAL,EAApB,EAA8B,KAAKC,CAAL,EAA9B,CAAP;CADJ;;;;;;AASAH,MAAMkB,SAAN,GAAkB,UAAUV,CAAV,EAAaG,GAAb,EAAkBE,KAAlB,EAAyB;SAClCL,CAAL,GAASA,KAAK,CAAd,CADuC;SAElCG,GAAL,GAAWA,OAAO,CAAlB,CAFuC;SAGlCE,KAAL,GAAaA,SAAS,CAAtB,CAHuC;CAA3C;;;;;;AAUAb,MAAMkB,SAAN,CAAgBX,SAAhB,CAA0BL,CAA1B,GAA8B,YAAY;WAC/B,KAAKM,CAAL,GAASH,KAAK6B,GAAL,CAAS,KAAKrB,KAAd,CAAT,GAAgCR,KAAK4B,GAAL,CAAS,KAAKtB,GAAd,CAAvC;CADJ;;AAIAX,MAAMkB,SAAN,CAAgBX,SAAhB,CAA0BJ,CAA1B,GAA8B,YAAY;WAC/B,KAAKK,CAAL,GAASH,KAAK6B,GAAL,CAAS,KAAKrB,KAAd,CAAT,GAAgCR,KAAK6B,GAAL,CAAS,KAAKvB,GAAd,CAAvC;CADJ;;AAIAX,MAAMkB,SAAN,CAAgBX,SAAhB,CAA0BH,CAA1B,GAA8B,YAAY;WAC/B,KAAKI,CAAL,GAASH,KAAK4B,GAAL,CAAS,KAAKpB,KAAd,CAAhB;CADJ;;AAIAb,MAAMkB,SAAN,CAAgBX,SAAhB,CAA0BuB,WAA1B,GAAwC,YAAY;WACzC,IAAI9B,MAAMC,SAAV,CAAoB,KAAKC,CAAL,EAApB,EAA8B,KAAKC,CAAL,EAA9B,EAAwC,KAAKC,CAAL,EAAxC,CAAP;CADJ;;;;;AAOAJ,MAAMkB,SAAN,CAAgBX,SAAhB,CAA0BY,GAA1B,GAAgC,YAAY;WACjC,KAAKR,GAAL,GAAYN,KAAKe,EAAL,GAAU,CAA7B;CADJ;;AAIApB,MAAMkB,SAAN,CAAgBX,SAAhB,CAA0Bc,GAA1B,GAAgC,YAAY;WACjC,KAAKR,KAAZ;CADJ,CAIA;;;;;;;;ACnKA;AACA,AAEA;;;;;;;AAOA,IAAMsB,cAAc,SAAdA,WAAc,CAAUjC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;QAC/B,QAAOF,CAAP,yCAAOA,CAAP,OAAa,QAAb,IAAyB,OAAOA,EAAEoB,KAAT,KAAmB,UAAhD,EAA4D;eACjDpB,CAAP;;WAEG,IAAIF,MAAMC,SAAV,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0BC,CAA1B,CAAP;CAJJ;;AAOA,IAAMgC,OAAO,SAAPA,IAAO,CAAUlC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;SACvBiC,MAAL,GAAc,EAAd;;QAEMX,SAASS,YAAYjC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,CAAf;;SAEKkC,KAAL,GAAa,UAAUC,CAAV,EAAa;UACpBX,GAAF,CAAMF,MAAN;eACOa,CAAP;KAFJ;;SAKKb,MAAL,GAAc,YAAY;eACfA,OAAOJ,KAAP,EAAP;KADJ;CAVJ;;;AAgBAc,KAAK7B,SAAL,CAAeiC,QAAf,GAA0B,UAAUD,CAAV,EAAa;QAC/B,KAAKE,QAAL,EAAJ,EAAqB;aACZJ,MAAL,CAAYK,MAAZ,CAAmB,KAAKL,MAAL,CAAYM,MAAZ,GAAqB,CAAxC,EAA2C,CAA3C,EAA8CJ,CAA9C;KADJ,MAEO;aACEF,MAAL,CAAYO,IAAZ,CAAiBL,CAAjB;;CAJR;;;AASAH,KAAK7B,SAAL,CAAeqB,GAAf,GAAqB,UAAU1B,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;QAC9BmC,IAAI,KAAKD,KAAL,CAAWH,YAAYjC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,CAAX,CAAV;SACKoC,QAAL,CAAcD,CAAd;CAFJ;;;AAMAH,KAAK7B,SAAL,CAAesC,QAAf,GAA0B,UAAU3C,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;QACrC,CAAC,KAAKiC,MAAL,CAAYM,MAAjB,EAAyB;cACf,IAAIG,KAAJ,CAAU,8CAAV,CAAN;;QAEEP,IAAIJ,YAAYjC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,CAAV;QACMoB,IAAI,KAAKuB,IAAL,GAAYzB,KAAZ,EAAV;MACEM,GAAF,CAAMW,CAAN;SACKC,QAAL,CAAchB,CAAd;CAPJ;;AAUAY,KAAK7B,SAAL,CAAewC,IAAf,GAAsB,YAAY;WACtB,KAAKV,MAAL,CAAYM,MAAb,GAAuB,KAAKN,MAAL,CAAY,KAAKA,MAAL,CAAYM,MAAZ,GAAqB,CAAjC,CAAvB,GAA6D,IAApE;CADJ;;AAIAP,KAAK7B,SAAL,CAAeyC,KAAf,GAAuB,YAAY;WACvB,KAAKX,MAAL,CAAYM,MAAb,GAAuB,KAAKN,MAAL,CAAY,CAAZ,CAAvB,GAAwC,IAA/C;CADJ;;AAIAD,KAAK7B,SAAL,CAAe0C,IAAf,GAAsB,YAAY;QAC1B,KAAKR,QAAL,EAAJ,EAAqB;aACZJ,MAAL,CAAYK,MAAZ,CAAmB,CAAC,CAApB,EAAuB,CAAvB;;WAEG,KAAKK,IAAL,EAAP;CAJJ;;AAOAX,KAAK7B,SAAL,CAAe2C,KAAf,GAAuB,YAAY;QAC3B,KAAKb,MAAL,CAAYM,MAAZ,IAAsB,CAAC,KAAKF,QAAL,EAA3B,EAA4C;aACnCJ,MAAL,CAAYO,IAAZ,CAAiB,KAAKI,KAAL,EAAjB;;WAEG,KAAKD,IAAL,EAAP;CAJJ;;AAOAX,KAAK7B,SAAL,CAAekC,QAAf,GAA0B,YAAY;WAC1B,KAAKJ,MAAL,CAAYM,MAAZ,GAAqB,CAArB,IAA0B,KAAKI,IAAL,OAAgB,KAAKC,KAAL,EAAlD;CADJ;;AAIAZ,KAAK7B,SAAL,CAAe4C,SAAf,GAA2B,UAAUjD,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;QACtCgD,UAAJ;QACMb,IAAIJ,YAAYjC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,CAAV;QACMuC,SAAU,KAAKF,QAAL,EAAD,GAAoB,KAAKJ,MAAL,CAAYM,MAAZ,GAAqB,CAAzC,GAA6C,KAAKN,MAAL,CAAYM,MAAxE;SACKS,IAAI,CAAT,EAAYA,IAAIT,MAAhB,EAAwBS,KAAK,CAA7B,EAAgC;aACvBf,MAAL,CAAYe,CAAZ,EAAexB,GAAf,CAAmBW,CAAnB;;CALR;;AASAH,KAAK7B,SAAL,CAAekB,KAAf,GAAuB,UAAUvB,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;QAClCgD,UAAJ;QACMb,IAAIJ,YAAYjC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,CAAV;QACMuC,SAAU,KAAKF,QAAL,EAAD,GAAoB,KAAKJ,MAAL,CAAYM,MAAZ,GAAqB,CAAzC,GAA6C,KAAKN,MAAL,CAAYM,MAAxE;SACKS,IAAI,CAAT,EAAYA,IAAIT,MAAhB,EAAwBS,KAAK,CAA7B,EAAgC;aACvBf,MAAL,CAAYe,CAAZ,EAAe3B,KAAf,CAAqB,KAAKC,MAAL,EAArB,EAAoCa,CAApC;;CALR;;AASAH,KAAK7B,SAAL,CAAesB,QAAf,GAA0B,UAAUwB,GAAV,EAAe;QACjCD,UAAJ;QACMT,SAAU,KAAKF,QAAL,EAAD,GAAoB,KAAKJ,MAAL,CAAYM,MAAZ,GAAqB,CAAzC,GAA6C,KAAKN,MAAL,CAAYM,MAAxE;SACKS,IAAI,CAAT,EAAYA,IAAIT,MAAhB,EAAwBS,KAAK,CAA7B,EAAgC;aACvBf,MAAL,CAAYe,CAAZ,EAAevB,QAAf,CAAwB,KAAKH,MAAL,EAAxB,EAAuC2B,GAAvC;;CAJR,CAQA;;AC3GA;;;;;;;;;;AAUA,IAAMC,UAAU,SAAVA,OAAU,CAAUC,QAAV,EAAoBC,MAApB,EAA4B9B,MAA5B,EAAoC;QAC1C+B,OAAO,IAAIrB,IAAJ,CAASV,MAAT,CAAb;QACI0B,IAAI,CAAR;;;QAGMM,QAASrD,KAAKe,EAAL,GAAU,CAAX,GAAgBmC,QAA9B;;WAEOH,IAAIG,QAAX,EAAqB;YACX/B,IAAI,IAAIxB,MAAMgB,KAAV,CAAgBwC,MAAhB,EAAwBJ,IAAIM,KAA5B,CAAV;YACMC,IAAInC,EAAEM,WAAF,EAAV;aACKF,GAAL,CAAS+B,EAAEzD,CAAX,EAAcyD,EAAExD,CAAhB;aACK,CAAL;;SAEC+C,KAAL;SACKO,IAAL,GAAYA,IAAZ;CAdJ;;;;;;AAqBA,IAAMG,YAAY,SAAZA,SAAY,CAAUC,KAAV,EAAiBC,MAAjB,EAAyBpC,MAAzB,EAAiC;QACzC+B,OAAO,IAAIrB,IAAJ,CAASV,MAAT,CAAb;;SAEKE,GAAL,CAAS,CAACiC,KAAD,GAAS,CAAlB,EAAqBC,SAAS,CAA9B;SACKjB,QAAL,CAAcgB,KAAd,EAAqB,CAArB;SACKhB,QAAL,CAAc,CAAd,EAAiB,CAACiB,MAAlB;SACKjB,QAAL,CAAc,CAACgB,KAAf,EAAsB,CAAtB;SACKX,KAAL;;SAEKO,IAAL,GAAYA,IAAZ;CATJ;;;;;;AAgBA,IAAMM,OAAO,SAAPA,IAAO,CAAUR,QAAV,EAAoBS,WAApB,EAAiCC,WAAjC,EAA8CvC,MAA9C,EAAsD;QACzD+B,OAAO,IAAIrB,IAAJ,CAASV,MAAT,CAAb;;QAEMwC,SAAS,SAATA,MAAS,CAAUV,MAAV,EAAkBE,KAAlB,EAAyB;YAChCS,QAAQ,IAAInE,MAAMgB,KAAV,CAAgBwC,MAAhB,EAAwBE,KAAxB,CAAZ;gBACQS,MAAMrC,WAAN,EAAR;eACOqC,KAAP;KAHJ;;;QAOMC,OAAO/D,KAAKe,EAAL,GAAU,CAAvB;QACMsC,QAASrD,KAAKe,EAAL,GAAU,CAAX,GAAgBmC,QAA9B;QACIc,eAAJ;QACIC,cAAJ;QACIC,cAAJ;QACInB,IAAI,CAAR;;WAEOA,IAAIG,QAAX,EAAqB;iBACPH,IAAKM,KAAN,GAAgBU,IAAzB;gBACQF,OAAOF,WAAP,EAAoBK,MAApB,CAAR;aACKzC,GAAL,CAAS2C,MAAMrE,CAAf,EAAkBqE,MAAMpE,CAAxB;;YAEIiD,KAAKG,WAAW,CAApB,EAAuB;sBACTG,QAAQ,CAAlB;oBACQQ,OAAOD,WAAP,EAAoBI,MAApB,CAAR;iBACKzC,GAAL,CAAS0C,MAAMpE,CAAf,EAAkBoE,MAAMnE,CAAxB;;aAEC,CAAL;;SAEC+C,KAAL;SACKO,IAAL,GAAYA,IAAZ;CA9BJ;;AAiCA;;;;;;;;AC/EA,IAAMe,SAAS;gBAAA;;CAAf;;;AAMAC,OAAOC,IAAP,CAAYC,QAAZ,EAAsBC,OAAtB,CAA8B,UAACC,GAAD,EAAS;WAC5BA,GAAP,IAAcF,SAASE,GAAT,CAAd;CADJ,EAIA;;"}