{"version":3,"file":null,"sources":["../src/Point.js","../src/Path.js","../src/Polygon.js","../src/Space.js"],"sourcesContent":["const Point = {};\n\n////\n// Point.Cartesian\n////\n\nPoint.Cartesian = function (x, y, z) {\n    this.x = Math.round(x) || 0;\n    this.y = Math.round(y) || 0;\n    this.z = Math.round(z) || 0;\n};\n\n// Convert to Spherical\n\nPoint.Cartesian.prototype.r = function () {\n    // eslint-disable-next-line no-restricted-properties\n    return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2) + Math.pow(this.z, 2));\n};\n\nPoint.Cartesian.prototype.phi = function () {\n    return Math.atan2(this.y, this.x);\n};\n\nPoint.Cartesian.prototype.theta = function () {\n    return Math.acos(this.z / this.r());\n};\n\nPoint.Cartesian.prototype.toSpherical = function () {\n    return new Point.Spherical(this.r(), this.phi(), this.theta());\n};\n\n// Geographical\n// https://vvvv.org/blog/polar-spherical-and-geographic-coordinates\n\nPoint.Cartesian.prototype.lat = function () {\n    return this.phi() - (Math.PI / 2);\n};\n\nPoint.Cartesian.prototype.lng = function () {\n    return this.theta();\n};\n\n// Ops\n\nPoint.Cartesian.prototype.clone = function () {\n    return new Point.Cartesian(this.x, this.y, this.z);\n};\n\nPoint.Cartesian.prototype.multiply = function (p) {\n    this.x *= p.x;\n    this.y *= p.y;\n    this.z *= p.z;\n};\n\nPoint.Cartesian.prototype.add = function (p) {\n    this.x += p.x;\n    this.y += p.y;\n    this.z += p.z;\n};\n\nPoint.Cartesian.prototype.substract = function (p) {\n    this.x -= p.x;\n    this.y -= p.y;\n    this.z -= p.z;\n};\n\n////\n// Point.Polar\n////\n\nPoint.Polar = function (r, phi) {\n    this.r = r || 0;            // distance\n    this.phi = phi || 0;        // polar angle\n};\n\n//// Point.Polar conversions\n\n// Cartesian\n\nPoint.Polar.prototype.x = function () {\n    return this.r * Math.cos(this.phi);\n};\n\nPoint.Polar.prototype.y = function () {\n    return this.r * Math.sin(this.phi);\n};\n\nPoint.Polar.prototype.toCartesian = function () {\n    return new Point.Cartesian(this.x(), this.y());\n};\n\n\n////\n// Point.Spherical\n////\n\nPoint.Spherical = function (r, phi, theta) {\n    this.r = r || 0;            // distance\n    this.phi = phi || 0;        // polar angle\n    this.theta = theta || 0;    // azimuthal angle\n};\n\n//// Point.Spherical conversions\n\n// Cartesian\n\nPoint.Spherical.prototype.x = function () {\n    return this.r * Math.sin(this.theta) * Math.cos(this.phi);\n};\n\nPoint.Spherical.prototype.y = function () {\n    return this.r * Math.sin(this.theta) * Math.sin(this.phi);\n};\n\nPoint.Spherical.prototype.z = function () {\n    return this.r * Math.cos(this.theta);\n};\n\nPoint.Spherical.prototype.toCartesian = function () {\n    return new Point.Cartesian(this.x(), this.y(), this.z());\n};\n\n// Geographical\n// https://vvvv.org/blog/polar-spherical-and-geographic-coordinates\n\nPoint.Spherical.prototype.lat = function () {\n    return this.phi - (Math.PI / 2);\n};\n\nPoint.Spherical.prototype.lng = function () {\n    return this.theta;\n};\n\nexport default Point;\n","//https://github.com/d3/d3-path/blob/master/src/path.js\nimport Point from './Point';\n\n/*\n * @TODO:\n * tranlate point\n * scale\n * rotate\n * arc\n */\nconst Path = function (x, y, z) {\n    this.points = [];\n    if (x !== undefined) {\n        this.add(x, y, z);\n    }\n    // return this?\n};\n\n//absolute coords\nPath.prototype.add = function (x, y, z) {\n    this.points.push(new Point.Cartesian(x, y, z));\n    // return this?\n};\n\n// relatve coords from last point\nPath.prototype.progress = function (x, y, z) {\n    const v = new Point.Cartesian(x, y, z);\n    const p = this.last().clone();//@TODO what if empty?\n    p.add(v);\n    this.points.push(p);\n    // return this?\n};\n\nPath.prototype.last = function () {\n    return this.points[this.points.length - 1];\n};\n\nPath.prototype.first = function () {\n    return this.points[0];\n};\n\nPath.prototype.open = function () {\n    if (this.isClosed()) {\n        this.points.splice(-1, 1);\n    }\n    return this.last();\n};\n\nPath.prototype.close = function () {\n    if (!this.isClosed()) {\n        this.points.push(this.first());\n    }\n    return this.last();\n};\n\nPath.prototype.isClosed = function () {\n    return this.last() === this.first();\n};\n\nexport default Path;\n","import Path from './Path';\nimport Point from './Point';\n\n////\n// Polygon\n////\n\n/**\n * translate center\n * set center\n * rotate\n * scale\n */\n\nconst Polygon = function (segments, radius, center) {\n    center = center || null;// node v8: no default params\n\n    const path = new Path();\n    let i = 0;\n\n    if (!center) {\n        center = new Point.Cartesian(0, 0, 0);\n    }\n\n    //@see http://stackoverflow.com/a/7198179\n    const delta = (Math.PI * 2) / segments;\n\n    while (i < segments) {\n        const p = new Point.Polar(radius, i * delta);\n        const c = p.toCartesian();\n        c.add(center);\n        path.add(c.x, c.y);\n        i += 1;\n    }\n    path.close();\n    this.path = path;\n};\n\n////\n// Rectangle\n////\n\nconst Rectangle = function (width, height, center) {\n    center = center || null;// node v8: no default params\n\n    //@TODO check ispoint\n    if (!center) {\n        center = new Point.Cartesian(0, 0, 0);\n    }\n\n    //@see http://stackoverflow.com/a/7198179\n    const first = center.clone();\n    first.add(new Point.Cartesian(-width / 2, height / 2));\n\n    const path = new Path(first.x, first.y);\n    path.progress(width, 0);\n    path.progress(0, -height);\n    path.progress(-width, 0);\n    path.close();\n\n    this.path = path;\n};\n\n////\n// Star\n////\n\nconst Star = function (segments, outerRadius, innerRadius, center) {\n    center = center || null;// node v8: no default params\n\n    const _point = function(radius, delta, center){\n        let point = new Point.Polar(radius, delta);\n        point = point.toCartesian();\n        point.add(center);\n        return point;\n    };\n\n    const path = new Path();\n    let i = 0;\n\n    if (!center) {\n        center = new Point.Cartesian(0, 0, 0);\n    }\n\n    //@see http://stackoverflow.com/a/7198179\n    const rad0 = Math.PI / 2;\n    const delta = (Math.PI * 2) / segments;\n    let _delta;\n    let inner;\n    let outer;\n\n    while (i < segments) {\n        _delta = (i * (delta)) - rad0;\n        outer = _point(outerRadius, _delta, center);\n        path.add(outer.x, outer.y);\n\n        if (i <= segments - 1) {\n            _delta += delta / 2;\n            inner = _point(innerRadius, _delta, center);\n            path.add(inner.x, inner.y);\n        }\n        i += 1;\n    }\n    path.close();\n    this.path = path;\n};\n\nexport {\n    Polygon,\n    Rectangle,\n    Star\n};\n","import Point from './Point';\nimport Path from './Path';\nimport * as Polygons from './Polygon';\n\nconst Module = {\n    Point,\n    Path\n};\n\n// hm...\nObject.keys(Polygons).forEach((key) => {\n    Module[key] = Polygons[key];\n});\n\nexport default Module;\n"],"names":["Point","Cartesian","x","y","z","Math","round","prototype","r","sqrt","pow","phi","atan2","theta","acos","toSpherical","Spherical","lat","PI","lng","clone","multiply","p","add","substract","Polar","cos","sin","toCartesian","Path","points","undefined","push","progress","v","last","length","first","open","isClosed","splice","close","Polygon","segments","radius","center","path","i","delta","c","Rectangle","width","height","Star","outerRadius","innerRadius","_point","point","rad0","_delta","inner","outer","Module","Object","keys","Polygons","forEach","key"],"mappings":"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"}