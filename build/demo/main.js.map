{"version":3,"file":null,"sources":["../../src/demo/Animation.js","../../src/demo/Canvas2d.js","../../src/demo/State.js","../../src/demo/Utils.js","../../src/demo/Home.vue","../../src/demo/Canvas2dHelpers.js","../../src/demo/Form/ColorPicker.vue","../../src/demo/Form/EditPathPoints.vue","../../src/demo/Form/Dev.vue","../../src/demo/Figures/BezierPath.vue","../../src/demo/Figures/Figures.vue","../../src/demo/Paths/Path.vue","../../src/demo/Paths/Polygon.vue","../../src/demo/Paths/Rectangle.vue","../../src/demo/Paths/Star.vue","../../src/demo/Paths/Cog.vue","../../src/demo/BezierPaths/Bezier.vue","../../src/demo/Routes.js","../../src/demo/Form/Animation.vue","../../src/demo/App.vue","../../src/demo/main.js"],"sourcesContent":["const Animation = function () {\n    this.id = null;\n    this.count = 0;\n    this.running = false;\n    this.interval = -1;\n    this.last = new Date().getTime();\n    this.callbacks = [];\n};\n\n// throttle - set frames per second\nAnimation.prototype.fps = function (fps) {\n    this.interval = (fps < 0) ? -1 : 1000 / fps;\n    return this;\n};\n\n// register callback\nAnimation.prototype.add = function (callback) {\n    this.callbacks.push(callback);\n    return this;\n};\n\n// clear all callbacks\nAnimation.prototype.clear = function () {\n    this.callbacks.splice(0, this.callbacks.length);\n    return this;\n};\n\n// clear existing callbacks and set one\nAnimation.prototype.only = function (callback) {\n    this.clear().add(callback);\n    return this;\n};\n\nAnimation.prototype.play = function () {\n    this.running = true;\n\n    const callback = () => {\n        if (!this.running) {\n            return;\n        }\n\n        const now = new Date().getTime();\n        const delta = now - this.last;\n\n        if (this.interval < 0 || delta > this.interval) {\n            this.last = now - (delta % this.interval);\n            this.callbacks.forEach((fn) => {\n                this.count += 1;\n                fn();\n            });\n        }\n\n        this.id = window.requestAnimationFrame(callback);\n    };\n\n    this.id = window.requestAnimationFrame(callback);\n    return this;\n};\n\nAnimation.prototype.stop = function () {\n    this.running = false;\n    this.count = 0;\n    return this;\n};\n\nAnimation.prototype.pause = function () {\n    this.running = false;\n    return this;\n};\n\nAnimation.prototype.cancel = function () {\n    this.stop();\n    window.cancelAnimationFrame(this.id);\n    this.id = null;\n    return this;\n};\n\nAnimation.prototype.toggle = function () {\n    if (this.running) {\n        this.pause();\n    } else {\n        this.play();\n    }\n    return this;\n};\n\nexport default Animation;\n","const document = window.document;\nconst CLASS_NAME = 'canvas';\n\nconst Canvas2d = function () {\n    const canvas = document.createElement('canvas');\n    canvas.className = CLASS_NAME;\n    const ctx = canvas.getContext('2d');\n\n    this.canvas = canvas;\n    this.ctx = ctx;\n};\n\nCanvas2d.prototype.styles = function (styles) {\n    Object.keys(styles).forEach((key) => {\n        if (key in this.ctx) {\n            this.ctx[key] = styles[key];\n        }\n    });\n};\n\nCanvas2d.prototype.clear = function () {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n};\n\nCanvas2d.prototype.fill = function () {\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n};\n\nexport default Canvas2d;\n","const State = {\n    canvas: {\n        width: 500,\n        height: 500,\n        strokeStyle: 'hsla(300, 100%, 75%, 1)',\n        fillStyle: 'rgba(0, 0, 0, .08)',\n        lineWidth: 0.1\n    },\n\n    // shallow(!) clone and merge in submitted properties\n    factor: function (property, merge) {\n        merge = merge || {};\n        Object.keys(this[property]).forEach((key) => {\n            merge[key] = (typeof merge[key] !== 'undefined') ? merge[key] : this[property][key];\n        });\n        return merge;\n    }\n\n};\n\nexport default State;\n","export default {\n    /**\n     * Returns a random integer between min (inclusive) and max (inclusive)\n     * Using Math.round() will give you a non-uniform distribution!\n     */\n    randInt: function (min, max) {\n        min = min || -1;\n        max = max || 1;\n        // eslint-disable-next-line no-mixed-operators\n        return Math.random() * (max - min) + min;\n    },\n\n    /**\n     * Returns a random integer between min (inclusive) and max (inclusive)\n     * Using Math.round() will give you a non-uniform distribution!\n     */\n    bounds: function (val, min, max) {\n        val = (min !== false && val < min) ? min : val;\n        val = (max !== false && val > max) ? max : val;\n        return val;\n    },\n\n    /**\n     * Returns a random integer between min (inclusive) and max (inclusive)\n     * Using Math.round() will give you a non-uniform distribution!\n     */\n    randIntRange: function (base, range, bounce = []) {\n        if (bounce.length) {\n            if ((base + range[1]) > bounce[1]) {\n                base -= range[1];\n            }\n            if ((base + range[0]) < bounce[0]) {\n                base -= range[0];\n            }\n        }\n\n        return base + this.randInt(range[0], range[1]);\n    },\n\n    /**\n     * Returns a random integer between min (inclusive) and max (inclusive)\n     * Using Math.round() will give you a non-uniform distribution!\n     */\n    radians: function (deg) {\n        return deg * (Math.PI / 180);\n    }\n\n};\n","<template>\n    <div>\n        nothing\n    </div>\n</template>\n\n<script>\nimport Utils from './Utils';\n\nconst Space = window.Space;\n\nconst computeTemplate = function (state, canvas) {\n    if (!state.origin) {\n        state.origin = new Space.Point.Cartesian(canvas.width / 2, canvas.height / 2);\n    }\n\n    const figure = new Space.Star(state.Star.segments, state.Star.outerRadius, state.Star.innerRadius, state.origin);\n    return figure;\n};\n\nconst computeFigure = function (state, canvas) {\n    const figure = new Space.Path();\n    const segmentWidth = canvas.width - state.Star.segments;\n    path.add(0, canvas.height / 2);\n    for (let i = 0; i < state.Star.segments; i += 1) {\n        path.progress(segmentWidth, 0);\n    }\n    return figure;\n};\n\nlet count = 0; ///TODO animation.count\nconst compute = function (state, canvas) {\n    if (!state.origin) {\n        state.origin = new Space.Point.Cartesian(canvas.width / 2, canvas.height / 2);\n    }\n\n    if (!count) {\n        state.template = computeTarget();\n        state.figure = computeFigure();\n        count +=1;\n        return;\n    }\n    \n    //TODO point.equals\n    // Goal\n    // - define steps\n    // - set counter 0\n    // - create mrph array\n    // - target figure\n    // - src figure\n    //      - set each point to i * segment, centerY\n    //          -set each handle to 0,0,0\n    //      - targ[i].x - src[i].x / steps\n    //          - set each handle targ[i].member[k] - src[i].members[k] / steps\n    // morph from a line into a star and back\n    // better: store array of polar points in template,\n    // convert figure point to polar and check radius length\n    // star is closed, so length - 1\n    if(Math.abs(state.figure.path[0].y) < Math.abs(state.template.path[0].y)){\n        \n    }\n};\n\nconst draw = function (figure, ctx) {\n    //init\n    ctx.save();\n\n    // styles\n    ctx.fillStyle = randRgba(figure.fillStyle);\n    ctx.strokeStyle = randRgba(figure.fillStyle);\n    ctx.lineWidth = 1;\n\n    // path\n    const path = figure.path;\n    ctx.beginPath();\n    ctx.moveTo(path.first().x, path.first().y);\n    path.points.forEach((point, index) => {\n        if (index === 0) {\n            return;\n        }\n        ctx.lineTo(point.x, point.y);\n    });\n\n    // draw\n    if (ctx.fillStyle) {\n        ctx.fill();\n    }\n    ctx.stroke();\n\n    // finish\n    ctx.closePath();\n    ctx.restore();\n};\n\nexport default {\n    name: 'Home',\n    props: [\n        'animation',\n        'appState',\n        'canvas'\n    ],\n    data: function () {\n        return {\n            state: {\n                prev: {\n                    figures: {}\n                },\n                origin: null,\n                canvas: this.appState.factor('canvas'),\n                Star: {\n                    segments: 5,\n                    outerRadius: 200,\n                    innerRadius: 70\n                }\n            }\n        };\n    },\n    created() {\n        // temp redirect\n        // this.$router.push('/Path');\n    },\n    mounted() {\n        this.canvas.fill();\n\n        this.animation\n        .fps(32)\n        .only(() => {\n            // compute path\n            const figures = compute(this.state, this.canvas.canvas);\n            const tasks = Object.keys(figures);\n            // init\n            this.canvas.fill();\n\n            // draw\n            tasks.forEach((id) => {\n                draw(figures[id], this.canvas.ctx);\n            });\n        })\n        .play()\n        ;\n    }\n};\n</script>\n\n<style>\n</style>\n","const Helpers = {\n\n    ////\n    // Controls\n    ////\n\n    drawLine: function (ctx, from, to, theme) {\n        if (!from) {\n            return;\n        }\n        ctx.save();\n\n        ctx.fillStyle = theme;\n        ctx.strokeStyle = theme;\n        //ctx.lineWidth = 0.5;\n        ctx.setLineDash([2, 2]);\n\n        ctx.beginPath();\n        ctx.moveTo(from.x, from.y);\n        ctx.lineTo(to.x, to.y);\n        ctx.stroke();\n        ctx.closePath();\n\n        ctx.restore();\n    },\n\n    drawPoint: function (ctx, point, name, theme) {\n        ctx.save();\n\n        ctx.fillStyle = theme;\n        ctx.strokeStyle = theme;\n\n        ctx.fillText(`${name}`, point.x + 10, point.y + 10);\n        ctx.fillRect(point.x - 5, point.y - 5, 10, 10);\n\n        ctx.restore();\n    },\n\n    drawCircle: function (ctx, point, name, theme) {\n        ctx.save();\n\n        ctx.fillStyle = theme;\n\n        ctx.fillText(`${name}`, point.x + 10, point.y + 10);\n        ctx.beginPath();\n        ctx.arc(point.x, point.y, 5, 0, 2 * Math.PI);\n        ctx.fill();\n\n        ctx.closePath();\n        ctx.restore();\n    },\n\n    drawHandle: function (ctx, point, handle, name, theme) {\n        ctx.save();\n\n        ctx.beginPath();\n        ctx.fillStyle = theme;\n        ctx.strokeStyle = theme;\n        ctx.lineWidth = 0.5;\n        ctx.fillText(`${name}`, handle.x + 10, handle.y);\n        ctx.fillRect(handle.x - 5, handle.y - 5, 10, 10);\n        ctx.moveTo(point.x, point.y);\n        ctx.lineTo(handle.x, handle.y);\n        ctx.stroke();\n\n        ctx.closePath();\n        ctx.restore();\n    },\n\n    drawBoundingBox: function (ctx, path, theme) {\n        const bounds = path.bounds();\n        if (!path.bounds()) {\n            return;\n        }\n        ctx.save();\n\n        ctx.fillStyle = theme;\n        ctx.strokeStyle = theme;\n        ctx.lineWidth = 0.2;\n\n        ctx.setLineDash([2, 2]);\n        ctx.strokeRect(bounds.min.x, bounds.min.y, bounds.max.x - bounds.min.x, bounds.max.y - bounds.min.y);\n\n        ctx.beginPath();\n        ctx.moveTo(bounds.center.x, bounds.min.y);\n        ctx.lineTo(bounds.center.x, bounds.max.y);\n        ctx.moveTo(bounds.min.x, bounds.center.y);\n        ctx.lineTo(bounds.max.x, bounds.center.y);\n        ctx.stroke();\n\n        ctx.closePath();\n        ctx.restore();\n    },\n\n    ////\n    // lines\n    ////\n\n    line: function (ctx, prev, point) {\n        if (!prev) {\n            return;\n        }\n        ctx.moveTo(prev.x, prev.y);\n        ctx.lineTo(point.x, point.y);\n    },\n\n    bezierLine: function (ctx, prev, point) {\n        if (!prev) {\n            return;\n        }\n        //ctx.moveTo(prev.x, prev.y);//Dev\n        const prevM = (prev && typeof prev.members !== 'undefined') ? prev.members.length : 0;\n        const pointM = (typeof point.members !== 'undefined') ? point.members.length : 0;\n\n        // line\n        if (!prevM && !pointM) {\n            ctx.lineTo(point.x, point.y);\n            return;\n        }\n        // middle\n        if (prevM > 1 && pointM > 1) {\n            ctx.bezierCurveTo(prev.members[1].x, prev.members[1].y, point.members[0].x, point.members[0].y, point.x, point.y);\n            return;\n        }\n        // start\n        if (!prevM && pointM) {\n            ctx.quadraticCurveTo(point.members[0].x, point.members[0].y, point.x, point.y);\n            return;\n        }\n        // end\n        if (prevM && !pointM) {\n            ctx.quadraticCurveTo(prev.members[1].x, prev.members[1].y, point.x, point.y);\n        }\n    }\n\n};\n\nexport default Helpers;\n","<template>\n    <div class=\"app--color-picker mui-panel\">\n        <table class=\"mui-table\">\n            <tbody>\n                <tr>\n                    <td>\n                        <input type=\"range\" v-model.number=\"RGBA[0]\" min=\"0\" max=\"255\">\n                    </td>\n                    <td>\n                        <strong class=\"app--indicator\" v-bind:style=\"{color:'rgb(' + RGBA[0] + ', 0, 0)'}\">◼</strong>\n                    </td>\n                    <td>\n                        <small>Red({{ RGBA[0] }})</small>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <input type=\"range\" v-model.number=\"RGBA[1]\" min=\"0\" max=\"255\">\n                    </td>\n                    <td>\n                        <strong class=\"app--indicator\" v-bind:style=\"{color:'rgb(0, ' + RGBA[1] + ', 0)'}\">◼</strong>\n                    </td>\n                    <td>\n                        <small>Green({{ RGBA[1] }})</small>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <input type=\"range\" v-model.number=\"RGBA[2]\" min=\"0\" max=\"255\">\n                    </td>\n                    <td>\n                        <strong class=\"app--indicator\" v-bind:style=\"{color:'rgb(0, 0, ' + RGBA[2] + ')'}\">◼</strong>\n                    </td>\n                    <td>\n                         <small>Blue({{ RGBA[2] }})</small>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                         <input type=\"range\" v-model.number=\"RGBA[3]\" min=\"0\" max=\"1\" step=\"0.1\">\n                    </td>\n                    <td></td>\n                    <td>\n                        <small>Alpha({{ RGBA[3] }})</small>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n        <pre class=\"app--color\" v-bind:style=\"{backgroundColor: rgbaString, color: rgbaStringContrast}\">{{rgbaString}}</pre>\n\n        <a  class=\"mui-btn mui-btn--small mui-btn--primary\" v-on:click=\"setColor()\">Set color</a>\n    </div>\n</template>\n\n<script>\nconst match = function (str, model) {\n    if (!str || str === 'transparent') {\n        return [0, 0, 0, 1];\n    }\n    let i;\n    let n;\n    const matches = str.match(/\\d+/g);\n    for (i = 0; i < matches.length; i += 1) {\n        n = parseInt(matches[i], 10);\n        if (!isNaN(n)) {\n            model[i] = matches[i];\n        }\n    }\n    return matches;\n};\n\nexport default {\n    name: 'ColorPicker',\n    props: [\n        'rgba',\n        'targ'\n    ],\n    data: function () {\n        return {\n            RGBA: match(this.rgba, [0, 0, 0, 1])\n        };\n    },\n    computed: {\n        rgbaString: function () {\n            return 'rgba(' + this.RGBA.toString() + ')';\n        },\n        rgbaStringContrast: function () {\n            const yiq = ((this.RGBA[0] * 299) + (this.RGBA[1] * 587) + (this.RGBA[2] * 114)) / 1000;\n            return (yiq >= 128) ? 'black' : 'white';\n        }\n    },\n    methods: {\n        setColor: function () {\n            this.$parent.$emit('color-picker:' + this.targ, this.rgbaString);\n        }\n    },\n};\n</script>\n\n<style>\n    .app--color-picker pre {\n        text-align: center;\n        border: 1px solid white;\n        padding: 10px;\n        font-size: 10px;\n    }\n</style>\n","<template>\n    <div>\n        <div class=\"app--micro-form\" v-if=\"path && path.points !== 'undefined'\">\n            <section  v-for=\"(point, index) in path.points\">\n                <strong>Point {{index}}</strong>\n                <div>\n                    <input type=\"text\" v-model.number=\"point.x\" v-on:change=\"update()\" size=\"3\">\n                    <label>x</label>\n                    <input type=\"text\" v-model.number=\"point.y\" v-on:change=\"update()\" size=\"3\">\n                    <label>y</label>\n                </div>\n                <!-- groups -->\n                <div\n                    v-if=\"typeof point.members !== 'undefined' && point.members.length\"\n                    v-for=\"(member, i) in point.members\">\n                    <strong>cp[{{i}}]</strong><br>\n                    <input type=\"text\" v-model.number=\"member.x\" v-on:change=\"update()\" size=\"3\">\n                    <label>x</label>\n                    <input type=\"text\" v-model.number=\"member.y\" v-on:change=\"update()\" size=\"3\">\n                    <label>.y</label>\n                </div>\n                <br>\n            </section>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'EditPathPoints',\n    props: [\n        'path'\n    ],\n    methods: {\n        update: function () {\n            this.$parent.$emit('edit-path-points:updated');\n        }\n    }\n};\n</script>\n\n<style>\n</style>\n","<template>\n    <section class=\"mui-form\">\n        <div class=\"mui-checkbox\">\n            <label>\n                <input type=\"checkbox\" v-model=\"show\"> Show {{label}}\n            </label>\n        </div>\n        <pre v-if=\"show\">{{data}}</pre>\n    </section>\n</template>\n\n<script>\nexport default {\n    name: 'Dev',\n    props: ['data', 'label'],\n    data: function () {\n        return {\n            show: false\n        };\n    },\n};\n</script>\n\n<style>\n</style>\n","<template>\n    <div>\n        <!-- nav -->\n        <section>\n            <button class=\"mui-btn mui-btn--small app--btn\" v-on:click=\"goTo('circle')\" v-bind:class=\"{active: state.figure == 'circle'}\">Circle</button>\n            <button class=\"mui-btn mui-btn--small app--btn\" v-on:click=\"goTo('free')\"   v-bind:class=\"{active: state.figure == 'free'}\">Open Path</button>\n            <button class=\"mui-btn mui-btn--small app--btn\" v-on:click=\"(state.figure == 'random') ? init('random') : goTo('random')\" v-bind:class=\"{active: state.figure == 'random'}\">Random</button>\n            <button class=\"mui-btn mui-btn--small app--btn\" v-on:click=\"goTo('star')\" v-bind:class=\"{active: state.figure == 'star'}\">Star</button>\n            <button class=\"mui-btn mui-btn--small app--btn\" v-on:click=\"goTo('flower')\" v-bind:class=\"{active: state.figure == 'flower'}\">Flower</button>\n            <button class=\"mui-btn mui-btn--small app--btn\" v-on:click=\"goTo('seaStar')\" v-bind:class=\"{active: state.figure == 'seaStar'}\">Sea Star</button>\n            <button class=\"mui-btn mui-btn--small app--btn\" v-on:click=\"goTo('triplet')\" v-bind:class=\"{active: state.figure == 'triplet'}\">Triplet</button>\n        </section>\n        <!-- helpers -->\n        <section class=\"mui-form\">\n            <legend>Helpers</legend>\n            <div class=\"mui-checkbox\">\n                <label>\n                    <input type=\"checkbox\" v-model=\"state.showHandles\" v-on:change=\"init()\"> Handles\n                </label>\n            </div>\n            <div class=\"mui-checkbox\">\n                <label>\n                    <input type=\"checkbox\" v-model=\"state.showPoints\" v-on:change=\"init()\"> Points\n                </label>\n            </div>\n            <div class=\"mui-checkbox\">\n                <label>\n                    <input type=\"checkbox\" v-model=\"state.showPath\" v-on:change=\"init()\"> Path\n                </label>\n            </div>\n            <div class=\"mui-checkbox\">\n                <label>\n                    <input type=\"checkbox\" v-model=\"state.showBounds\" v-on:change=\"init()\"> Bounding Box\n                </label>\n            </div>\n        </section>\n        <!-- states for figure -->\n        <section class=\"mui-form\">\n            <legend>States</legend>\n\n            <div class=\"mui-textfield\" v-if=\"typeof state[state.figure].tension !== 'undefined'\">\n                <input type=\"range\" v-model.number=\"state[state.figure].tension\" min=\"-2\" max=\"2\" step=\"0.1\" v-on:change=\"init()\">\n                <label>Corner tension <small>({{ state[state.figure].tension }})</small></label>\n            </div>\n\n            <div class=\"mui-textfield\" v-if=\"typeof state[state.figure].segments !== 'undefined'\">\n                <input type=\"range\" v-model.number=\"state[state.figure].segments\" min=\"3\" max=\"20\" v-on:change=\"init()\">\n                <label>Segments <small>({{ state[state.figure].segments }})</small></label>\n            </div>\n\n            <div class=\"mui-textfield\" v-if=\"typeof state[state.figure].outerTension !== 'undefined'\">\n                <input type=\"range\" v-model.number=\"state[state.figure].outerTension\" min=\"0\" max=\"25\" step=\"1\" v-on:change=\"init()\">\n                <label>Outer corner tension <small>({{ state[state.figure].outerTension }})</small></label>\n            </div>\n\n            <div class=\"mui-textfield\" v-if=\"typeof state[state.figure].innerTension !== 'undefined'\">\n                <input type=\"range\" v-model.number=\"state[state.figure].innerTension\" min=\"0\" max=\"5\" step=\"0.1\" v-on:change=\"init()\">\n                <label>Inner corner tension <small>({{ state[state.figure].innerTension }})</small></label>\n            </div>\n        </section>\n        <!-- colors, stroke -->\n        <section class=\"mui-form\">\n            <legend>Appearance</legend>\n\n            <div class=\"mui-checkbox\">\n                <label>\n                    <input type=\"checkbox\" v-model=\"state.stroke.edit\" > Edit Stroke\n                </label>\n            </div>\n\n            <div class=\"mui-panel\" v-if=\"state.stroke.edit\">\n                <div class=\"mui-textfield\">\n                    <input type=\"text\" v-model.number=\"state.canvas.lineWidth\" v-on:change=\"init()\" >\n                    <label>Width</label>\n                </div>\n                <color-picker :targ=\"'strokeStyle'\" :rgba=\"state.canvas.strokeStyle\"></color-picker>\n            </div>\n\n            <div class=\"mui-checkbox\">\n                <label>\n                    <input type=\"checkbox\" v-model=\"state.fill.edit\" > Edit Fill\n                </label>\n            </div>\n\n            <div class=\"mui-panel\" v-if=\"state.fill.edit\">\n                <color-picker :targ=\"'fillStyle'\" :rgba=\"state.canvas.fillStyle\"></color-picker>\n            </div>\n        </section>\n        <!-- edit path points -->\n        <section class=\"mui-form\">\n            <legend>Path</legend>\n\n            <div class=\"mui-checkbox\">\n                <label>\n                    <input type=\"checkbox\" v-model=\"state.path.edit\" > Edit Path\n                </label>\n            </div>\n        </section>\n        <!-- devel -->\n        <section class=\"mui-form\">\n            <legend>Devel</legend>\n            <div class=\"mui-panel\" v-if=\"state.path.edit\">\n                <edit-path-points :path=\"path\"></edit-path-points>\n            </div>\n            <dev :label=\"'State'\" :data=\"state\"></dev>\n        </section>\n    </div>\n</template>\n\n<script>\nimport Canvas2dHelpers from '../Canvas2dHelpers';\nimport Utils from '../Utils';\n\nimport ColorPicker from '../Form/ColorPicker.vue';\nimport EditPathPoints from '../Form/EditPathPoints.vue';\nimport Dev from '../Form/Dev.vue';\n\nconst Space = window.Space;\n\n//TODO this can be moved into figure paths\nconst compute = function (path, state) {\n    const figure = state.figure;\n    switch (figure) {\n        case 'flower':\n        case 'seaStar':\n            break;\n        default:\n            Space.Bezier.smoothPath(path, state[figure].tension);\n    }\n    return path;\n};\n\nconst draw = function (path, state, canvas) {\n    canvas.ctx.save();\n    canvas.ctx.strokeStyle = state.canvas.strokeStyle;\n    canvas.ctx.lineWidth = state.canvas.lineWidth;\n    canvas.ctx.fillStyle = state.canvas.fillStyle;\n\n    const length = path.points.length;\n    let prev;\n    let point;\n    let i;\n\n    //// curve\n    canvas.ctx.beginPath();\n    canvas.ctx.moveTo(path.first().x, path.first().y);\n    for (i = 1; i < length; i += 1) {\n        prev = path.prev(i);\n        point = path.get(i);\n        Canvas2dHelpers.bezierLine(canvas.ctx, prev, point);\n    }\n    canvas.ctx.fill();\n    canvas.ctx.stroke();\n    canvas.ctx.restore();\n    //// helpers\n\n    for (i = 0; i < length; i += 1) {\n        prev = path.prev(i);\n        point = path.get(i);\n\n        if (state.showHandles) {\n            if (point.members !== undefined && point.members.length > 1) {\n                Canvas2dHelpers.drawHandle(canvas.ctx, point, point.members[0], i + ':left', 'red');\n                Canvas2dHelpers.drawHandle(canvas.ctx, point, point.members[1], i + ':right', 'blue');\n            }\n        }\n        if (state.showPoints) {\n            Canvas2dHelpers.drawPoint(canvas.ctx, point, i + ':point', '#666666');\n        }\n        if (state.showPath) {\n            Canvas2dHelpers.drawLine(canvas.ctx, prev, point, '#666666');\n        }\n        if (state.showBounds) {\n            Canvas2dHelpers.drawBoundingBox(canvas.ctx, path, 'yellow');\n        }\n    }\n    canvas.ctx.restore();\n};\n\n////\n// Figures\n////\n\nconst Figures = {\n    // circle\n    circle: function (state) {\n        const path = new Space.Path(state.origin.x, state.origin.y);\n        path.add(50, 50);\n        path.add(150, 50);\n        path.add(150, 150);\n        path.add(50, 150);\n        path.close();\n        path.scale(1.5, 1.5);\n        return path;\n    },\n\n    star: function (state) {\n        const dim = (state.origin.x < state.origin.y) ? state.origin.x : state.origin.y;\n        const margin = dim * 0.2;\n        const outer = dim - margin;\n        const inner = margin;\n        const figure = new Space.Star(state.star.segments, outer, inner, state.origin);\n        return figure.path;\n    },\n\n    flower: function (state) {\n        const dim = (state.origin.x < state.origin.y) ? state.origin.x : state.origin.y;\n        const margin = dim * 0.2;\n        const outer = dim - margin;\n        const inner = 10;\n        const figure = new Space.Star(state.flower.segments, outer, inner, state.origin);\n        figure.flower(state.flower.outerTension);\n        return figure.path;\n    },\n\n    seaStar: function (state) {\n        const dim = (state.origin.x < state.origin.y) ? state.origin.x : state.origin.y;\n        const margin = dim * 0.2;\n        const outer = dim - margin;\n        const inner = margin;\n        const figure = new Space.Star(state.seaStar.segments, outer, inner, state.origin);\n        figure.seaStar(state.seaStar.innerTension);\n        return figure.path;\n    },\n\n    free: function (state) {\n        const path = new Space.Path();\n        path.points = [\n            new Space.Point.Cartesian(20, 50),\n            new Space.Point.Cartesian(100, 100),\n            new Space.Point.Cartesian(150, 50),\n            new Space.Point.Cartesian(200, 150),\n            new Space.Point.Cartesian(250, 50),\n            new Space.Point.Cartesian(300, 70),\n            new Space.Point.Cartesian(310, 130),\n            new Space.Point.Cartesian(380, 30)\n        ];\n        path.scale(2, 2);\n        path.translate(50, state.origin.y / 2);\n        return path;\n    },\n\n    random: function (state, canvas) {\n        const path = new Space.Path();\n        const segments = Utils.randInt(10, 100);\n        const range = 200;\n        let rand;\n        path.add(new Space.Group(canvas.width / 2, canvas.height / 2));\n        for (let i = 0; i < segments; i += 1) {\n            rand = new Space.Point.Cartesian(\n                Utils.randInt(-range, range) * Utils.randInt(),\n                Utils.randInt(-range, range) * Utils.randInt()\n            );\n            rand.add(path.last());\n            rand.x = Utils.bounds(rand.x, 0, canvas.width);\n            rand.y = Utils.bounds(rand.y, 0, canvas.height);\n            path.add(rand);\n        }\n        return path;\n    },\n\n    triplet: function (state) {\n        const path = new Space.Path(state.origin.x, state.origin.y);\n        path.add(-200, -200);\n        path.progress(100, 200);\n        path.progress(100, -200);\n        return path;\n    }\n};\n\nconst defaults = {\n    strokeStyle: 'rgba(255, 255, 255, 1)',\n    fillStyle: 'transparent', //'rgba(255, 255, 255, 1)',\n    lineWidth: 2\n};\n\nexport default {\n    name: 'BezierPath',\n    props: [\n        'animation',\n        'appState',\n        'canvas'\n    ],\n    created: function () {\n        this.$on('color-picker:fillStyle', (val) => {\n            this.state.canvas.fillStyle = val;\n            this.state.fill.edit = false;\n            this.init();\n        });\n        this.$on('color-picker:strokeStyle', (val) => {\n            this.state.canvas.strokeStyle = val;\n            this.state.stroke.edit = false;\n            this.init();\n        });\n        this.$on('edit-path-points:updated', () => {\n            this.update();\n        });\n    },\n    watch: {\n        '$route'(to) {\n            this.state.figure = to.params.figure;\n            this.init();\n        }\n    },\n    data: function () {\n        return {\n            state: {\n                origin: null,\n                canvas: this.appState.factor('canvas', defaults),\n                stroke: {\n                    edit: false\n                },\n                fill: {\n                    edit: false\n                },\n                path: {\n                    edit: false\n                },\n                // helpers\n                showHandles: true,\n                showPoints: true,\n                showPath: false,\n                showBounds: false,\n                figure: (typeof this.$route.params.figure !== 'undefined') ? this.$route.params.figure : 'free',\n                // special states\n                circle: {\n                    tension: 0.5\n                },\n                star: {\n                    segments: 6,\n                    tension: 0.5\n                },\n                flower: {\n                    segments: 6,\n                    outerTension: 15\n                },\n                seaStar: {\n                    segments: 6,\n                    innerTension: 0.5\n                },\n                free: {\n                    tension: 0.5\n                },\n                random: {\n                    tension: 0.5\n                },\n                triplet: {\n                    tension: 0.5\n                }\n            },\n            path: null\n        };\n    },\n    components: {\n        ColorPicker,\n        Dev,\n        EditPathPoints\n    },\n    mounted() {\n        //@TODO cancel animation\n        this.animation.only(() => {}).cancel(); // !!!!!\n        this.init();\n    },\n    methods: {\n\n        // compute path and draw\n        init: function (figure) {\n            if (figure !== undefined) {\n                this.state.figure = figure;\n            }\n            let timeout = null;\n            this.canvas.clear();\n\n            //@TODO\n            timeout = window.setTimeout(() => {\n                // !in timeout\n                if (!this.state.origin) {\n                    this.state.origin = new Space.Point.Cartesian(this.canvas.canvas.width / 2, this.canvas.canvas.height / 2);\n                }\n                this.path = Figures[this.state.figure](this.state, this.canvas.canvas);\n\n                compute(this.path, this.state, this.canvas.canvas);\n                draw(this.path, this.state, this.canvas);\n                window.clearTimeout(timeout);\n            }, 100);\n        },\n\n        // draws from state path\n        update: function () {\n            let timeout = null;\n            this.canvas.clear();\n\n            //@TODO\n            timeout = window.setTimeout(() => {\n                draw(this.path, this.state, this.canvas);\n                window.clearTimeout(timeout);\n            }, 100);\n        },\n\n        goTo(figure) {\n            this.$router.push({ name: this.$route.name, params: { figure: figure } });\n        }\n    }\n};\n</script>\n\n<style>\n</style>\n","<template>\n    <div>\n        <section>\n            <div class=\"mui-dropdown\">\n                <button class=\"mui-btn mui-btn-small\" data-mui-toggle=\"dropdown\">\n                    {{ (figure) ? figure : 'Choose' }}\n                    <span class=\"mui-caret mui--text-accent\"></span>\n                </button>\n                <ul class=\"mui-dropdown__menu\">\n                    <li\n                        v-for=\"fig in figures\"\n                        v-if=\"fig.name !== figure\"\n                        v-bind:class=\"{'router-link-active': fig.name === figure}\"\n                    >\n                        <a v-on:click=\"goTo(fig)\">{{ fig.name }}</a>\n                    </li>\n                </ul>\n            </div>\n        </section>\n\n        <!-- helpers -->\n        <section class=\"mui-form\">\n            <legend>Helpers</legend>\n            <div class=\"mui-checkbox\">\n                <label>\n                    <input type=\"checkbox\" v-model=\"state.showPoints\" v-on:change=\"init()\"> Points\n                </label>\n            </div>\n            <div class=\"mui-checkbox\">\n                <label>\n                    <input type=\"checkbox\" v-model=\"state.showPath\" v-on:change=\"init()\"> Path\n                </label>\n            </div>\n            <div class=\"mui-checkbox\">\n                <label>\n                    <input type=\"checkbox\" v-model=\"state.showBounds\" v-on:change=\"init()\"> Bounding Box\n                </label>\n            </div>\n        </section>\n\n        <!-- figure:path -->\n        <section class=\"mui-form--inline\" v-if=\"figure === 'Path'\">\n            <div class=\"app--inline-field mui-textfield\">\n                <input type=\"text\" v-model.number=\"state.Path.segments\" v-on:change=\"init()\" >\n                <label>Segments <small>({{ state.Path.segments }})</small></label>\n            </div>\n        </section>\n\n        <!-- figure:polygon -->\n        <section class=\"mui-form--inline\" v-if=\"figure === 'Polygon'\">\n            <div class=\"mui-textfield\">\n                <input type=\"text\" v-model.number=\"state.Polygon.segments\" v-on:change=\"init()\" >\n                <label>Segments</label>\n            </div>\n            <div class=\"mui-textfield\">\n                <input type=\"text\" v-model.number=\"state.Polygon.radius\" v-on:change=\"init()\" >\n                <label>Radius</label>\n            </div>\n        </section>\n\n        <!-- figure:star -->\n        <section class=\"mui-form--inline\" v-if=\"figure === 'Star'\">\n            <div class=\"mui-textfield\">\n                <input type=\"text\" v-model.number=\"state.Star.segments\" v-on:change=\"init()\" >\n                <label>Segments</label>\n            </div>\n            <div class=\"mui-textfield\">\n                <input type=\"text\" v-model.number=\"state.Star.outerRadius\" v-on:change=\"init()\" >\n                <label>outer Radius</label>\n            </div>\n            <div class=\"mui-textfield\">\n                <input type=\"text\" v-model.number=\"state.Star.innerRadius\" v-on:change=\"init()\" >\n                <label>inner Radius</label>\n            </div>\n        </section>\n\n        <!-- figure:cog -->\n        <section class=\"mui-form--inline\" v-if=\"figure === 'Cog'\">\n            <div class=\"mui-textfield\">\n                <input type=\"text\" v-model.number=\"state.Cog.segments\" v-on:change=\"init()\" >\n                <label>Segments</label>\n            </div>\n            <div class=\"mui-textfield\">\n                <input type=\"text\" v-model.number=\"state.Cog.outerRadius\" v-on:change=\"init()\" >\n                <label>outer Radius</label>\n            </div>\n            <div class=\"mui-textfield\">\n                <input type=\"text\" v-model.number=\"state.Cog.innerRadius\" v-on:change=\"init()\" >\n                <label>inner Radius</label>\n            </div>\n        </section>\n\n        <!-- figure:rectangle -->\n        <section class=\"mui-form--inline\"  v-if=\"figure === 'Rectangle'\">\n            <div class=\"mui-textfield\">\n                <input type=\"text\" v-model.number=\"state.Rectangle.width\" v-on:change=\"init()\" >\n                <label>Width</label>\n            </div>\n            <div class=\"mui-textfield\">\n                <input type=\"text\" v-model.number=\"state.Rectangle.height\" v-on:change=\"init()\" >\n                <label>Height</label>\n            </div>\n        </section>\n\n        <!-- colors, stroke -->\n        <section class=\"mui-form--inline\" v-if=\"state.fill.form\">\n            <legend>Background</legend>\n            <div class=\"mui-checkbox\">\n                <label>\n                    <input type=\"checkbox\" v-model=\"state.fill.show\" v-on:change=\"init()\"> Show\n                </label>\n            </div>\n            <div class=\"mui-checkbox\" v-if=\"state.fill.show\">\n                <label>\n                    <input type=\"checkbox\" v-model=\"state.fill.edit\" > Edit\n                </label>\n            </div>\n            <div v-if=\"state.fill.edit\">\n                <color-picker :targ=\"'fillStyle'\" :rgba=\"state.canvas.fillStyle\"></color-picker>\n            </div>\n        </section>\n\n        <!-- colors, stroke -->\n        <section class=\"mui-form--inline\">\n            <legend>Stroke</legend>\n            <div class=\"mui-checkbox\">\n                <label>\n                    <input type=\"checkbox\" v-model=\"state.stroke.show\" v-on:change=\"init()\"> Show\n                </label>\n            </div>\n            <div class=\"mui-checkbox\" v-if=\"state.stroke.show\">\n                <label>\n                    <input type=\"checkbox\" v-model=\"state.stroke.edit\" > Edit\n                </label>\n            </div>\n\n            <div v-if=\"state.stroke.edit\">\n                <div  class=\"mui-panel\">\n                    <div class=\"mui-textfield\">\n                        <input type=\"text\" v-model.number=\"state.canvas.lineWidth\" v-on:change=\"init()\" >\n                        <label>Width</label>\n                    </div>\n                </div>\n                <color-picker :targ=\"'strokeStyle'\" :rgba=\"state.canvas.strokeStyle\"></color-picker>\n            </div>\n        </section>\n\n        <!-- translate -->\n        <section class=\"mui-form--inline\">\n            <legend>Translate</legend>\n            <div class=\"mui-textfield\">\n                <input type=\"text\" v-model.number=\"state.tanslate[0]\" v-on:change=\"init()\" >\n                <label>X</label>\n            </div>\n            <div class=\"mui-textfield\">\n                <input type=\"text\" v-model.number=\"state.tanslate[1]\" v-on:change=\"init()\" >\n                <label>Y</label>\n            </div>\n        </section>\n\n        <!-- scale-->\n        <section class=\"mui-form--inline\">\n            <legend>Scale</legend>\n            <div class=\"mui-textfield\">\n                <input type=\"text\" v-model.number=\"state.scale[0]\" v-on:change=\"init()\" >\n                <label>X</label>\n            </div>\n            <div class=\"mui-textfield\">\n                <input type=\"text\" v-model.number=\"state.scale[1]\" v-on:change=\"init()\" >\n                <label>Y</label>\n            </div>\n        </section>\n\n        <!-- rotate-->\n        <section class=\"mui-form--inline\">\n            <legend>Rotate</legend>\n            <div class=\"mui-textfield\">\n                <input type=\"text\" v-model.number=\"state.rotate2D\" v-on:change=\"init()\" >\n                <label>rad</label>\n            </div>\n        </section>\n\n        <dev :label=\"'State'\" :data=\"state\"></dev>\n    </div>\n</template>\n\n<script>\nimport Canvas2dHelpers from '../Canvas2dHelpers';\nimport Utils from '../Utils';\nimport Routes from '../Routes';\nimport ColorPicker from '../Form/ColorPicker.vue';\nimport Dev from '../Form/Dev.vue';\n\nconst Space = window.Space;\n\nconst compute = function (figure, state, canvas) {\n\n    if (!state.origin) {\n        state.origin = new Space.Point.Cartesian(canvas.width / 2, canvas.height / 2);\n    }\n\n    let fig;\n    let segments;\n\n    switch (figure) {\n\n        case 'Path': {\n            const margin = 100;\n            segments = state.Path.segments;\n            const x = (canvas.width - (2 * margin)) / segments;\n            let y = canvas.height - (2 * margin);\n            fig = new Space.Path();\n            fig.add(margin, margin);\n            while (segments > 0) {\n                fig.progress(x, y);\n                y = -y;\n                segments -= 1;\n            }\n            break;\n        }\n\n        case 'Polygon': {\n            fig = new Space.Polygon(state.Polygon.segments, state.Polygon.radius, state.origin);\n            break;\n        }\n\n        case 'Rectangle': {\n            fig = new Space.Rectangle(state.Rectangle.width, state.Rectangle.height, state.origin);\n            break;\n        }\n\n        case 'Star': {\n            fig = new Space.Star(state.Star.segments, state.Star.outerRadius, state.Star.innerRadius, state.origin);\n            break;\n        }\n\n        case 'Cog': {\n            fig = new Space.Cog(state.Cog.segments, state.Cog.outerRadius, state.Cog.innerRadius, state.origin);\n            break;\n        }\n\n        default: {\n            fig = null;\n        }\n\n    }\n\n    //Figure or only Path\n    const path = (typeof fig.path !== 'undefined') ? fig.path : fig;\n\n    // translate\n    const hasTranslate = state.tanslate.reduce((a, b) => {\n        return a + b;\n    });\n\n    if (hasTranslate) {\n        path.translate(state.tanslate[0], state.tanslate[1]);\n    }\n\n    // translate\n    const hasScale = state.scale.reduce((a, b) => {\n        return a * b;\n    });\n\n    // scale\n    if (hasScale !== 1) {\n        path.scale(state.scale[0], state.scale[1]);\n    }\n\n    // rotate 2d\n    if (state.rotate2D) {\n        path.rotate2D(Utils.radians(state.rotate2D));\n    }\n\n    return path;\n\n};\n\nconst draw = function (figure, path, state, canvas) {\n    canvas.ctx.save();\n    // styles\n    canvas.ctx.fillStyle = (state.fill.show && figure !== 'Path') ? state.canvas.fillStyle : 'transparent';\n    canvas.ctx.strokeStyle = state.canvas.strokeStyle;\n    canvas.ctx.lineWidth = state.canvas.lineWidth;\n\n    // path\n    canvas.ctx.beginPath();\n    canvas.ctx.moveTo(path.first().x, path.first().y);\n    path.points.forEach((point, index) => {\n        if (index === 0) {\n            return;\n        }\n        canvas.ctx.lineTo(point.x, point.y);\n    });\n\n    // draw\n    if (state.canvas.fillStyle) {\n        canvas.ctx.fill();\n    }\n    canvas.ctx.stroke();\n\n    // finish\n    canvas.ctx.closePath();\n    canvas.ctx.restore();\n\n    //// helpers\n    const length = path.points.length;\n    let prev;\n    let point;\n    let i;\n\n    for (i = 0; i < length; i += 1) {\n        prev = path.prev(i);\n        point = path.get(i);\n\n        if (state.showPoints) {\n            Canvas2dHelpers.drawPoint(canvas.ctx, point, i + ':point', 'orange');\n        }\n        if (state.showPath) {\n            Canvas2dHelpers.drawLine(canvas.ctx, prev, point, '#666666');\n        }\n        if (state.showBounds) {\n            Canvas2dHelpers.drawBoundingBox(canvas.ctx, path, 'yellow');\n        }\n    }\n};\n\nconst defaults = {\n    strokeStyle: 'rgba(255, 255, 255, 1)',\n    fillStyle: 'rgba(255, 255, 255, 1)',\n    lineWidth: 2\n};\n\nexport default {\n    name: 'Figures',\n    props: [\n        'animation',\n        'appState',\n        'canvas'\n    ],\n    watch: {\n        '$route'(to) {\n            this.figure = to.params.figure;\n            this.state.canvas = this.appState.factor('canvas', defaults);\n            this.init();\n        }\n    },\n    created: function () {\n        this.$on('color-picker:fillStyle', (val) => {\n            this.state.canvas.fillStyle = val;\n            this.state.fill.edit = false;\n            this.init();\n        });\n        this.$on('color-picker:strokeStyle', (val) => {\n            this.state.canvas.strokeStyle = val;\n            this.state.stroke.edit = false;\n            this.init();\n        });\n    },\n    data: function () {\n        return {\n            state: {\n                origin: null,\n                canvas: this.appState.factor('canvas', defaults),\n                // form\n                fill: {\n                    form: true,\n                    show: true,\n                    edit: false\n                },\n                stroke: {\n                    show: true,\n                    edit: false\n                },\n                // transform\n                tanslate: [0, 0],\n                scale: [1, 1],\n                rotate2D: 0,\n                // helpers\n                showPoints: false,\n                showPath: false,\n                showBounds: false,\n                // form defaults per figure\n                Path: {\n                    segments: 25\n                },\n                Polygon: {\n                    segments: 6,\n                    radius: 200\n                },\n                Star: {\n                    segments: 5,\n                    outerRadius: 200,\n                    innerRadius: 70\n                },\n                Cog: {\n                    segments: 5,\n                    outerRadius: 200,\n                    innerRadius: 125\n                },\n                Rectangle: {\n                    width: 300,\n                    height: 200\n                }\n            },\n            figures: Routes.figures(),\n            figure: (typeof this.$route.params.figure !== 'undefined') ? this.$route.params.figure : 'Path'\n        };\n    },\n    components: {\n        ColorPicker,\n        Dev\n    },\n    mounted() {\n        //@TODO cancel animation\n        this.animation.only(() => {}).cancel(); // !!!!!\n        this.init();\n    },\n    methods: {\n        init: function () {\n            let timeout = null;\n            this.canvas.clear();\n            this.initForms();\n            //@TODO\n            timeout = window.setTimeout(() => {\n                const path = compute(this.figure, this.state, this.canvas.canvas);\n                draw(this.figure, path, this.state, this.canvas);\n                window.clearTimeout(timeout);\n            }, 100);\n        },\n        initForms: function () {\n            this.state.fill.form = (this.figure !== 'Path');\n        },\n        goTo(figure) {\n            this.$router.push({ name: this.$route.name, params: { figure: figure.name } });\n        }\n    }\n};\n</script>\n\n<style>\n</style>\n","<template>\n    <div>\n        <section class=\"mui-form\">\n            <legend>Edit Params</legend>\n            <div class=\"mui-textfield\">\n                <input type=\"range\" v-model.number=\"state.segments\" min=\"10\" max=\"800\" step=\"10\">\n                <label>Segments <small>({{ state.segments }})</small></label>\n            </div>\n            <div class=\"mui-textfield\">\n                <input type=\"range\" v-model.number=\"state.segmentsRange\" min=\"1\" max=\"50\">\n                <label>Segment Range <small>({{ state.segmentsRange }})</small></label>\n            </div>\n        </section>\n\n        <!-- devel -->\n        <dev :label=\"'State'\" :data=\"state\"></dev>\n    </div>\n</template>\n\n<script>\nimport Utils from '../Utils';\nimport Dev from '../Form/Dev.vue';\n\nconst Space = window.Space;\n\nconst compute = function (state, canvas) {\n    if (!state.prev) {\n        state.prev = new Space.Point.Cartesian(canvas.width / 2, canvas.height / 2);\n    }\n    const path = new Space.Path();\n    const range = state.segmentsRange;\n    let count = 0;\n    let rand;\n    path.add(state.prev);\n    while (count < state.segments) {\n        rand = new Space.Point.Cartesian(\n            Utils.randInt(-range, range) * Utils.randInt(),\n            Utils.randInt(-range, range) * Utils.randInt()\n        );\n        rand.add(path.last());\n        rand.x = Utils.bounds(rand.x, 0, canvas.width);\n        rand.y = Utils.bounds(rand.y, 0, canvas.height);\n        path.add(rand);\n        count += 1;\n    }\n\n    state.prev = path.last();\n    return path;\n};\n\nexport default {\n    name: 'Path',\n    props: [\n        'animation',\n        'appState',\n        'canvas'\n    ],\n    components: {\n        Dev\n    },\n    data: function () {\n        return {\n            state: {\n                prev: null,\n                segments: 200,\n                segmentsRange: 10,\n                canvas: this.appState.factor('canvas')\n            }\n        };\n    },\n    mounted() {\n        let path;\n\n        this.animation\n        // .fps(1)\n        .only(() => {\n            // compute path\n            path = compute(this.state, this.canvas.canvas);\n\n            // init\n            this.canvas.fill();\n            this.canvas.ctx.save();\n\n            // styles\n            this.canvas.ctx.strokeStyle = this.state.canvas.strokeStyle;\n            this.canvas.ctx.lineWidth = this.state.canvas.lineWidth;\n\n            // path\n            this.canvas.ctx.beginPath();\n            this.canvas.ctx.moveTo(path.first().x, path.first().y);\n            path.points.forEach((point, index) => {\n                if (index === 0) {\n                    return;\n                }\n                this.canvas.ctx.lineTo(point.x, point.y);\n                // draw\n                this.canvas.ctx.stroke();\n            });\n\n            // finish\n            this.canvas.ctx.closePath();\n            this.canvas.ctx.restore();\n        })\n        .play()\n        ;\n    }\n};\n\n</script>\n\n<style>\n</style>\n","<template>\n    <div>\n        <section class=\"mui-form\">\n            <legend>Edit Params</legend>\n            <div class=\"mui-textfield\">\n                <input type=\"range\" v-model.number=\"state.segmentsRange\" min=\"1\" max=\"50\">\n                <label>Segment Range <small>({{ state.segmentsRange }})</small></label>\n            </div>\n            <div class=\"mui-textfield\">\n                <input type=\"range\" v-model.number=\"state.radiusRange\" min=\"5\" max=\"500\">\n                <label>Radius Range <small>({{ state.radiusRange }})</small></label>\n            </div>\n        </section>\n\n        <!-- devel -->\n        <dev :label=\"'State'\" :data=\"state\"></dev>\n    </div>\n</template>\n\n<script>\nimport Utils from '../Utils';\nimport Dev from '../Form/Dev.vue';\n\nconst Space = window.Space;\n\nconst compute = function (state, canvas) {\n    if (!state.origin) {\n        state.origin = new Space.Point.Cartesian(canvas.width / 2, canvas.height / 2);\n    }\n    let radius = Math.floor(Utils.randInt(5, state.radiusRange));\n    let segments = Math.floor(Utils.randInt(3, state.segmentsRange));\n    segments = Utils.bounds(segments, false, 25);\n    radius = Utils.bounds(radius, false, canvas.width / 2);\n\n    state.prev.segments = segments;\n    state.prev.radius = radius;\n\n    return new Space.Polygon(segments, radius, state.origin);\n};\n\nexport default {\n    name: 'Polygon',\n    props: [\n        'animation',\n        'appState',\n        'canvas'\n    ],\n    components: {\n        Dev\n    },\n    data: function () {\n        return {\n            state: {\n                prev: {\n                    segments: 3,\n                    radius: 50\n                },\n                segmentsRange: 10,\n                radiusRange: 200,\n                origin: null,\n                canvas: this.appState.factor('canvas', {\n                    strokeStyle: 'rgba(255, 255, 255, 1)',\n                    fillStyle: 'rgba(99, 9, 9, .8)'\n                })\n            }\n        };\n    },\n    mounted() {\n        let polygon;\n\n        this.animation\n        // .fps(1)\n        .only(() => {\n            // compute path\n            polygon = compute(this.state, this.canvas.canvas);\n\n            // init\n            this.canvas.fill();\n            this.canvas.ctx.save();\n\n            // styles\n            this.canvas.ctx.fillStyle = this.state.canvas.fillStyle;\n            this.canvas.ctx.strokeStyle = this.state.canvas.strokeStyle;\n            this.canvas.ctx.lineWidth = this.state.canvas.lineWidth;\n\n            // path\n            this.canvas.ctx.beginPath();\n            this.canvas.ctx.moveTo(polygon.path.first().x, polygon.path.first().y);\n            polygon.path.points.forEach((point, index) => {\n                if (index === 0) {\n                    return;\n                }\n                this.canvas.ctx.lineTo(point.x, point.y);\n            });\n\n            // draw\n            if (this.state.canvas.fillStyle) {\n                this.canvas.ctx.fill();\n            }\n            this.canvas.ctx.stroke();\n\n            // finish\n            this.canvas.ctx.closePath();\n            this.canvas.ctx.restore();\n        })\n        .play()\n        ;\n    }\n};\n</script>\n\n<style>\n</style>\n","<template>\n    <div>\n        <section class=\"mui-form\">\n            <legend>Edit Params</legend>\n            <div class=\"mui-textfield\">\n                <input type=\"range\" v-model.number=\"state.widthRange\" min=\"5\" max=\"1000\">\n                <label>Width Range <small>({{ state.widthRange }})</small></label>\n            </div>\n            <div class=\"mui-textfield\">\n                <input type=\"range\" v-model.number=\"state.heightRange\" min=\"5\" max=\"1000\">\n                <label>Height Range <small>({{ state.heightRange }})</small></label>\n            </div>\n        </section>\n\n        <!-- devel -->\n        <dev :label=\"'State'\" :data=\"state\"></dev>\n    </div>\n</template>\n\n<script>\nimport Utils from '../Utils';\nimport Dev from '../Form/Dev.vue';\n\nconst Space = window.Space;\n\nconst compute = function (state, canvas) {\n    if (!state.origin) {\n        state.origin = new Space.Point.Cartesian(canvas.width / 2, canvas.height / 2);\n    }\n    const width = Math.floor(Utils.randInt(5, state.widthRange));\n    const height = Math.floor(Utils.randInt(3, state.heightRange));\n\n    state.prev.width = width;\n    state.prev.height = height;\n\n    return new Space.Rectangle(width, height, state.origin);\n};\n\nexport default {\n    name: 'Rectangle',\n    props: [\n        'animation',\n        'appState',\n        'canvas'\n    ],\n    components: {\n        Dev\n    },\n    data: function () {\n        return {\n            state: {\n                prev: {\n                    width: 25,\n                    height: 50\n                },\n                widthRange: 500,\n                heightRange: 500,\n                origin: null,\n                canvas: this.appState.factor('canvas', {\n                    strokeStyle: 'rgba(255, 255, 255, 1)',\n                    fillStyle: 'rgba(255, 255, 255, .2)'\n                })\n            }\n        };\n    },\n    mounted() {\n        let polygon;\n\n        this.animation\n        // .fps(1)\n        .only(() => {\n            // compute path\n            polygon = compute(this.state, this.canvas.canvas);\n\n            // init\n            this.canvas.fill();\n            this.canvas.ctx.save();\n\n            // styles\n            this.canvas.ctx.fillStyle = this.state.canvas.fillStyle;\n            this.canvas.ctx.strokeStyle = this.state.canvas.strokeStyle;\n            this.canvas.ctx.lineWidth = this.state.canvas.lineWidth;\n\n            // path\n            this.canvas.ctx.beginPath();\n            this.canvas.ctx.moveTo(polygon.path.first().x, polygon.path.first().y);\n            polygon.path.points.forEach((point, index) => {\n                if (index === 0) {\n                    return;\n                }\n                this.canvas.ctx.lineTo(point.x, point.y);\n            });\n\n            // draw\n            if (this.state.canvas.fillStyle) {\n                this.canvas.ctx.fill();\n            }\n            this.canvas.ctx.stroke();\n\n            // finish\n            this.canvas.ctx.closePath();\n            this.canvas.ctx.restore();\n        })\n        .play()\n        ;\n    }\n};\n</script>\n\n<style>\n</style>\n","<template>\n    <div>\n        <section class=\"mui-form\">\n            <legend>Edit Params</legend>\n            <div class=\"mui-textfield\">\n                <input type=\"range\" v-model.number=\"state.segmentsRange\" min=\"1\" max=\"50\">\n                <label>Segment Range <small>({{ state.segmentsRange }})</small></label>\n            </div>\n            <div class=\"mui-textfield\">\n                <input type=\"range\" v-model.number=\"state.outerRadiusRange\" min=\"5\" max=\"500\">\n                <label>Outer Radius Range <small>({{ state.outerRadiusRange }})</small></label>\n            </div>\n            <div class=\"mui-textfield\">\n                <input type=\"range\" v-model.number=\"state.innerRadiusRange\" min=\"5\" max=\"500\">\n                <label>Inner Radius Range <small>({{ state.innerRadiusRange }})</small></label>\n            </div>\n        </section>\n\n        <!-- devel -->\n        <dev :label=\"'State'\" :data=\"state\"></dev>\n    </div>\n</template>\n\n<script>\nimport Utils from '../Utils';\nimport Dev from '../Form/Dev.vue';\n\nconst Space = window.Space;\n\nconst compute = function (state, canvas) {\n    if (!state.origin) {\n        state.origin = new Space.Point.Cartesian(canvas.width / 2, canvas.height / 2);\n    }\n\n    let outerRadius = Math.floor(Utils.randInt(5, state.outerRadiusRange));\n    let innerRadius = Math.floor(Utils.randInt(5, state.innerRadiusRange));\n    let segments = Math.floor(Utils.randInt(3, state.segmentsRange));\n    segments = Utils.bounds(segments, false, 25);\n    outerRadius = Utils.bounds(outerRadius, false, canvas.width / 2);\n    innerRadius = Utils.bounds(innerRadius, false, canvas.width / 2);\n\n    state.prev.segments = segments;\n    state.prev.outerRadius = outerRadius;\n    state.prev.innerRadius = innerRadius;\n\n    return new Space.Star(segments, outerRadius, innerRadius, state.origin);\n};\n\nexport default {\n    name: 'Star',\n    props: [\n        'animation',\n        'appState',\n        'canvas'\n    ],\n    components: {\n        Dev\n    },\n    data: function () {\n        return {\n            state: {\n                prev: {\n                    segments: 3,\n                    outerRadius: 50,\n                    innerRadius: 10\n                },\n                segmentsRange: 10,\n                outerRadiusRange: 200,\n                innerRadiusRange: 200,\n                origin: null,\n                canvas: this.appState.factor('canvas', {\n                    strokeStyle: 'rgba(255, 255, 255, 1)',\n                    fillStyle: 'rgba(0, 99, 0, .6)'\n                })\n            }\n        };\n    },\n    mounted() {\n        let polygon;\n\n        this.animation\n        // .fps(1)\n        .only(() => {\n            // compute path\n            polygon = compute(this.state, this.canvas.canvas);\n\n            // init\n            this.canvas.fill();\n            this.canvas.ctx.save();\n\n            // styles\n            this.canvas.ctx.fillStyle = this.state.canvas.fillStyle;\n            this.canvas.ctx.strokeStyle = this.state.canvas.strokeStyle;\n            this.canvas.ctx.lineWidth = this.state.canvas.lineWidth;\n\n            // path\n            this.canvas.ctx.beginPath();\n            this.canvas.ctx.moveTo(polygon.path.first().x, polygon.path.first().y);\n            polygon.path.points.forEach((point, index) => {\n                if (index === 0) {\n                    return;\n                }\n                this.canvas.ctx.lineTo(point.x, point.y);\n            });\n\n            // draw\n            if (this.state.canvas.fillStyle) {\n                this.canvas.ctx.fill();\n            }\n            this.canvas.ctx.stroke();\n\n            // finish\n            this.canvas.ctx.closePath();\n            this.canvas.ctx.restore();\n        })\n        .play()\n        ;\n    }\n};\n</script>\n\n<style>\n</style>\n","<template>\n    <div>\n        <section class=\"mui-form\">\n            <legend>Edit Params</legend>\n            <div class=\"mui-textfield\">\n                <input type=\"range\" v-model.number=\"state.segmentsRange\" min=\"1\" max=\"50\">\n                <label>Segment Range <small>({{ state.segmentsRange }})</small></label>\n            </div>\n            <div class=\"mui-textfield\">\n                <input type=\"range\" v-model.number=\"state.outerRadiusRange\" min=\"5\" max=\"500\">\n                <label>Outer Radius Range <small>({{ state.outerRadiusRange }})</small></label>\n            </div>\n            <div class=\"mui-textfield\">\n                <input type=\"range\" v-model.number=\"state.innerRadiusRange\" min=\"5\" max=\"500\">\n                <label>Inner Radius Range <small>({{ state.innerRadiusRange }})</small></label>\n            </div>\n        </section>\n\n        <!-- devel -->\n        <dev :label=\"'State'\" :data=\"state\"></dev>\n    </div>\n</template>\n\n<script>\nimport Utils from '../Utils';\nimport Dev from '../Form/Dev.vue';\n\nconst Space = window.Space;\n\nconst compute = function (state, canvas) {\n    if (!state.origin) {\n        state.origin = new Space.Point.Cartesian(canvas.width / 2, canvas.height / 2);\n    }\n\n    let outerRadius = Math.floor(Utils.randInt(5, state.outerRadiusRange));\n    let innerRadius = Math.floor(Utils.randInt(5, state.innerRadiusRange));\n    let segments = Math.floor(Utils.randInt(3, state.segmentsRange));\n    segments = Utils.bounds(segments, false, 25);\n    outerRadius = Utils.bounds(outerRadius, false, canvas.width / 2);\n    innerRadius = Utils.bounds(innerRadius, false, canvas.width / 2);\n\n    state.prev.segments = segments;\n    state.prev.outerRadius = outerRadius;\n    state.prev.innerRadius = innerRadius;\n\n    return new Space.Cog(segments, outerRadius, innerRadius, state.origin);\n};\n\nexport default {\n    name: 'Star',\n    props: [\n        'animation',\n        'appState',\n        'canvas'\n    ],\n    components: {\n        Dev\n    },\n    data: function () {\n        return {\n            state: {\n                prev: {\n                    segments: 3,\n                    outerRadius: 50,\n                    innerRadius: 10\n                },\n                segmentsRange: 10,\n                outerRadiusRange: 200,\n                innerRadiusRange: 200,\n                origin: null,\n                canvas: this.appState.factor('canvas', {\n                    strokeStyle: 'rgba(255, 255, 255, 1)',\n                    fillStyle: 'rgba(0, 99, 0, .6)'\n                })\n            }\n        };\n    },\n    mounted() {\n        let polygon;\n\n        this.animation\n        // .fps(1)\n        .only(() => {\n            // compute path\n            polygon = compute(this.state, this.canvas.canvas);\n\n            // init\n            this.canvas.fill();\n            this.canvas.ctx.save();\n\n            // styles\n            this.canvas.ctx.fillStyle = this.state.canvas.fillStyle;\n            this.canvas.ctx.strokeStyle = this.state.canvas.strokeStyle;\n            this.canvas.ctx.lineWidth = this.state.canvas.lineWidth;\n\n            // path\n            this.canvas.ctx.beginPath();\n            this.canvas.ctx.moveTo(polygon.path.first().x, polygon.path.first().y);\n            polygon.path.points.forEach((point, index) => {\n                if (index === 0) {\n                    return;\n                }\n                this.canvas.ctx.lineTo(point.x, point.y);\n            });\n\n            // draw\n            if (this.state.canvas.fillStyle) {\n                this.canvas.ctx.fill();\n            }\n            this.canvas.ctx.stroke();\n\n            // finish\n            this.canvas.ctx.closePath();\n            this.canvas.ctx.restore();\n        })\n        .play()\n        ;\n    }\n};\n</script>\n\n<style>\n</style>\n","<template>\n    <div>\n        <section class=\"mui-form\">\n            <legend>Edit Params</legend>\n            <div class=\"mui-textfield\">\n                <input type=\"range\" v-model.number=\"state.segments\" min=\"3\" max=\"60\" step=\"1\">\n                <label>Segments <small>({{ state.segments }})</small></label>\n            </div>\n            <div class=\"mui-textfield\">\n                <input type=\"range\" v-model.number=\"state.segmentsRange\" min=\"0\" max=\"1\" step=\"0.1\">\n                <label>Segments range <small>({{ state.segmentsRange }})</small></label>\n            </div>\n            <div class=\"mui-textfield\">\n                <input type=\"range\" v-model.number=\"state.tension\" min=\"-2\" max=\"2\" step=\"0.1\">\n                <label>Corner tension <small>({{ state.tension }})</small></label>\n            </div>\n        </section>\n\n        <!-- devel -->\n        <dev :label=\"'State'\" :data=\"state\"></dev>\n    </div>\n</template>\n\n<script>\nimport Utils from '../Utils';\nimport Dev from '../Form/Dev.vue';\nimport Canvas2dHelpers from '../Canvas2dHelpers';\n\nconst Space = window.Space;\n\nconst compute = function (state, canvas) {\n    const path = new Space.Path();\n    const phi = (Math.PI * 2) / state.segments;\n    const maxR = (canvas.width < canvas.height) ? (canvas.width / 3) : (canvas.height / 3);\n    const minR = maxR * state.segmentsRange;\n    let r;\n    let p;\n    for (let i = 0; i < state.segments; i += 1) {\n        r = Utils.randInt(minR, maxR);\n        p = new Space.Point.Polar(r, i * phi);\n        path.add(new Space.Group(p.x(), p.y()));\n    }\n    path.close();\n    path.translate(canvas.width / 2, canvas.height / 2);\n    Space.Bezier.smoothPath(path, state.tension);\n    return path;\n};\n\nexport default {\n    name: 'Path',\n    props: [\n        'animation',\n        'appState',\n        'canvas'\n    ],\n    components: {\n        Dev\n    },\n    data: function () {\n        return {\n            state: {\n                segments: 10,\n                segmentsRange: 0.3,\n                canvas: this.appState.factor('canvas', {\n                    lineWidth: 0.5\n                }),\n                tension: 0.5\n            }\n        };\n    },\n    mounted() {\n        let path;\n\n        this.animation\n        // .fps(1)\n        .only(() => {\n            // compute path\n            path = compute(this.state, this.canvas.canvas);\n\n            // init\n            this.canvas.fill();\n            this.canvas.ctx.save();\n\n            // styles\n            this.canvas.ctx.strokeStyle = this.state.canvas.strokeStyle;\n            this.canvas.ctx.lineWidth = this.state.canvas.lineWidth;\n\n            //// curve\n            const length = path.points.length;\n            let prev;\n            let point;\n            let i;\n\n            this.canvas.ctx.beginPath();\n            this.canvas.ctx.moveTo(path.first().x, path.first().y);\n            for (i = 1; i < length; i += 1) {\n                prev = path.prev(i);\n                point = path.get(i);\n                Canvas2dHelpers.bezierLine(this.canvas.ctx, prev, point);\n            }\n            this.canvas.ctx.fill();\n            this.canvas.ctx.stroke();\n        })\n        .play()\n        ;\n    }\n};\n\n</script>\n\n<style>\n</style>\n","// landing views\nimport Home from './Home.vue';\nimport BezierPath from './Figures/BezierPath.vue';\nimport Figures from './Figures/Figures.vue';\n// single views\nimport Path from './Paths/Path.vue';\nimport Polygon from './Paths/Polygon.vue';\nimport Rectangle from './Paths/Rectangle.vue';\nimport Star from './Paths/Star.vue';\nimport Cog from './Paths/Cog.vue';\nimport Bezier from './BezierPaths/Bezier.vue';\n\n\nconst routes = [\n    {\n        name: '',\n        path: '/',\n        component: Path,\n        meta: {\n            menu: false,\n            figure: false\n        }\n    },\n    {\n        name: 'Home',\n        path: '/Home',\n        component: Home,\n        meta: {\n            menu: false,\n            figure: false\n        }\n    },\n    {\n        name: 'Path',\n        path: '/Path',\n        component: Path,\n        meta: {\n            menu: true,\n            figure: true\n        }\n    },\n    {\n        name: 'Polygon',\n        path: '/Polygon',\n        component: Polygon,\n        meta: {\n            menu: true,\n            figure: true\n        }\n    },\n    {\n        name: 'Rectangle',\n        path: '/Rectangle',\n        component: Rectangle,\n        meta: {\n            menu: true,\n            figure: true\n        }\n    },\n    {\n        name: 'Star',\n        path: '/Star',\n        component: Star,\n        meta: {\n            menu: true,\n            figure: true\n        }\n    },\n    {\n        name: 'Cog',\n        path: '/Cog',\n        component: Cog,\n        meta: {\n            menu: true,\n            figure: true\n        }\n    },\n    {\n        name: 'Bezier',\n        path: '/Bezier',\n        component: Bezier,\n        meta: {\n            menu: true,\n            figure: false\n        }\n    },\n    {\n        name: 'Figures',\n        path: '/Figures/:figure?',\n        component: Figures,\n        meta: {\n            menu: true,\n            figure: false\n        }\n    },\n    {\n        name: 'BezierPaths',\n        path: '/BezierPath/:figure?',\n        component: BezierPath,\n        meta: {\n            menu: true,\n            figure: false\n        }\n    },\n    // catch all redirect\n    {\n        name: '',\n        path: '*',\n        redirect: '/',\n        meta: {\n            menu: false,\n            figure: false\n        }\n    }\n];\n\nconst figures = function () {\n    return routes.filter((item) => {\n        return item.meta.figure;\n    });\n};\n\nconst menu = function () {\n    return routes\n    .filter((item) => {\n        return item.meta.menu;\n    })\n    .map((item) => {\n        return {\n            name: item.name,\n            path: item.path,\n            meta: item.meta || {}\n        };\n    });\n};\n\nconst byName = function (name) {\n    let i;\n    for (i = 1; i < routes.length; i += 1) {\n        if (routes[i].name === name) {\n            return routes[i];\n        }\n    }\n    return null;\n};\n\nexport default {\n    routes: routes,\n    figures: figures,\n    menu: menu,\n    byName: byName\n};\n","<template>\n    <div>\n        <section v-if=\"animation.id\" class=\"mui-form\">\n            <legend>Animation <small>{{animation.count}}</small></legend>\n            <a v-on:click=\"animation.toggle()\" class=\"mui-btn mui-btn--small mui-btn--primary\">\n                {{(animation.running) ? 'pause' : 'play'}}\n            </a>\n            <a v-on:click=\"show = !show\" class=\"mui-btn mui-btn--small app--btn\">Throttle</a>\n\n            <div v-if=\"show\" class=\"mui-panel\">\n                <div class=\"mui-textfield\" style=\"\">\n                    <input type=\"range\" v-on:change=\"throttle($event.target.value)\" min=\"0\" max=\"100\">\n                    <label>fps <small>({{1000 / animation.interval}})</small></label>\n                </div>\n            </div>\n        </section>\n\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'Animation',\n    props: ['animation'],\n    data: function () {\n        return {\n            show: false\n        };\n    },\n    methods: {\n        throttle: function (value) {\n            if (value === null) {\n                return;\n            }\n            value = parseInt(value, 10);\n            if (!isNaN(value)) {\n                this.animation.fps(value);\n            }\n        }\n    }\n};\n</script>\n\n<style>\n</style>\n","<template>\n    <div>\n        <header id=\"header\">\n            <div class=\"mui-appbar mui--appbar-line-height mui--z1\">\n                <div class=\"mui-container-fluid\">\n                    <table width=\"100%\">\n                        <tr class=\"mui--appbar-height\">\n                            <td>\n                                <span class=\"app--brand\"></span>\n                                <div class=\"mui-dropdown\">\n                                    <button class=\"mui-btn mui-btn-small\" data-mui-toggle=\"dropdown\">\n                                        Space <span class=\"mui--text-accent\">/</span> {{ $route.name }}\n                                        <span class=\"mui-caret mui--text-accent\"></span>\n                                    </button>\n                                    <ul class=\"mui-dropdown__menu\">\n                                        <li\n                                            v-for=\"route in routes\"\n                                            v-if=\"route.name\"\n                                            v-bind:class=\"{'router-link-active': $route.name === route.name}\"\n                                        >\n                                            <a v-on:click=\"goTo(route)\">{{ route.name }}</a>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </td>\n                            <td>\n                                <a class=\"app--sidebar-trigger mui--pull-right mui--text-display1\" v-on:click=\"toggle()\"><i class=\"zmdi zmdi-settings\"></i></a>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        </header>\n\n        <footer id=\"footer\">\n            <div class=\"app--footer-content mui-container-fluid mui--align-middle\">\n                Demo made with <a href=\"https://vuejs.org/\">Vue</a> & <a href=\"https://www.muicss.com\">MUI</a>\n            </div>\n        </footer>\n\n        <aside id=\"sidebar\" class=\"mui-panel\" v-bind:class=\"{'visible': sidebar}\">\n\n            <div v-if=\"$route.name\" class=\"mui--appbar-line-height\">\n                <span class=\"mui--text-title\">{{ $route.name }}</span>\n            </div>\n            <div class=\"mui-divider\"></div>\n\n            <animation :animation=\"animation\"></animation>\n\n           <router-view class=\"view\"\n               :app-state=\"appState\"\n               :animation=\"animation\"\n               :canvas=\"canvas\"\n           ></router-view>\n\n       </aside>\n\n        <main id=\"content\" class=\"mui-container-fluid\">\n            <div class=\"mui-row\">\n                <div class=\"mui-col-md-12 app--canvas\"></div>\n            </div>\n        </main>\n    </div>\n</template>\n\n<script>\nimport Animation from './Form/Animation.vue';\n\nexport default {\n    name: 'app',\n    props: ['animation', 'appState', 'canvas', 'routes'],\n    components: {\n        Animation\n    },\n    mounted() {\n        this.sidebar = document.getElementById('sidebar');\n\n        this.$el.querySelector('.app--canvas').appendChild(this.canvas.canvas);\n        this.canvas.canvas.width = document.body.clientWidth;\n        this.canvas.canvas.height = document.body.clientHeight;\n        this.canvas.ctx.fillStyle = this.appState.canvas.fillStyle;\n        this.canvas.ctx.lineWidth = this.appState.canvas.lineWidth;\n    },\n    methods: {\n        goTo: function (route) {\n            const to = (route.path.indexOf('/:') > -1) ? { name: route.name, params: {} } : route.path;\n            this.$router.push(to);\n        },\n        toggle: function () {\n            if (!this.sidebar) {\n                return;\n            }\n            let right = (this.sidebar.style.right) ? this.sidebar.style.right : window.getComputedStyle(this.sidebar).getPropertyValue('right');\n            right = parseInt(right, 10);\n            this.sidebar.style.right = ((right < 0) ? 0 : -this.sidebar.clientWidth) + 'px';\n        }\n    },\n    data: function () {\n        return {\n            sidebar: null\n        };\n    }\n};\n</script>\n\n<style>\n</style>\n","import Vue from 'vue';\nimport VueRouter from 'vue-router';\n\n// rollup-plugin-scss\nimport './main.scss';\n\nimport Animation from './Animation';\nimport Canvas2d from './Canvas2d';\nimport State from './State';\nimport Routes from './Routes';\n\nimport App from './App.vue';\n\nconst animation = new Animation();\nconst canvas = new Canvas2d();\n\n// Create the router\nconst router = new VueRouter({\n    mode: 'hash', //'history',\n    routes: Routes.routes\n});\n\n// 4. Create and mount root instance.\n// Make sure to inject the router.\nnew Vue({\n    router,\n    data: {\n        animation,\n        appState: State,\n        canvas,\n        routes: Routes.menu()\n    },\n    components: {\n        App\n    },\n    //render: h => h(App)\n    template: '<App :app-state=\"appState\" :animation=\"animation\" :canvas=\"canvas\" :routes=\"routes\"/>',\n}).$mount('#app');\n"],"names":["Animation","id","count","running","interval","last","Date","getTime","callbacks","prototype","fps","add","callback","push","clear","splice","length","only","play","now","delta","forEach","fn","window","requestAnimationFrame","stop","pause","cancel","cancelAnimationFrame","toggle","document","CLASS_NAME","Canvas2d","canvas","createElement","className","ctx","getContext","styles","keys","key","clearRect","width","height","fill","fillRect","State","property","merge","min","max","Math","random","val","base","range","bounce","randInt","deg","PI","Space","computeFigure","state","figure","Path","segmentWidth","Star","segments","i","progress","compute","origin","Point","Cartesian","template","computeTarget","abs","path","y","draw","save","fillStyle","randRgba","strokeStyle","lineWidth","beginPath","moveTo","first","x","points","point","index","lineTo","stroke","closePath","restore","render","appState","factor","animation","figures","tasks","Object","Helpers","from","to","theme","setLineDash","name","fillText","arc","handle","bounds","strokeRect","center","prev","prevM","members","pointM","bezierCurveTo","quadraticCurveTo","match","str","model","n","matches","parseInt","isNaN","rgba","RGBA","toString","yiq","$parent","$emit","targ","rgbaString","Bezier","smoothPath","tension","get","bezierLine","showHandles","undefined","drawHandle","showPoints","drawPoint","showPath","drawLine","showBounds","drawBoundingBox","Figures","close","scale","dim","margin","outer","inner","star","flower","outerTension","seaStar","innerTension","translate","Utils","rand","Group","defaults","$on","edit","init","update","params","$route","timeout","setTimeout","clearTimeout","$router","fig","Polygon","radius","Rectangle","outerRadius","innerRadius","Cog","hasTranslate","tanslate","reduce","a","b","hasScale","rotate2D","radians","show","Routes","initForms","form","segmentsRange","floor","radiusRange","polygon","widthRange","heightRange","outerRadiusRange","innerRadiusRange","phi","maxR","minR","r","p","Polar","routes","Home","BezierPath","filter","item","meta","menu","map","byName","value","sidebar","getElementById","$el","querySelector","appendChild","body","clientWidth","clientHeight","route","indexOf","right","style","getComputedStyle","getPropertyValue","router","VueRouter","Vue","$mount"],"mappings":"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"}